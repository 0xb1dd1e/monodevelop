<Type Name="StringParserService" FullName="MonoDevelop.Core.StringParserService">
  <TypeSignature Language="C#" Value="public class StringParserService : MonoDevelop.Core.AbstractService" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Core</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>MonoDevelop.Core.AbstractService</BaseTypeName>
  </Base>
  <Interfaces />
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringParserService ();" />
      <MemberType>Constructor</MemberType>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string input);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public void Parse (ref string[] inputs);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.String[]&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="inputs">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStringTagProvider">
      <MemberSignature Language="C#" Value="public void RegisterStringTagProvider (MonoDevelop.Core.IStringTagProvider tagProvider);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagProvider" Type="MonoDevelop.Core.IStringTagProvider" />
      </Parameters>
      <Docs>
        <param name="tagProvider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string input, String[,] customTags);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="customTags" Type="System.String[,]" />
      </Parameters>
      <Docs>
        <param name="input">To be added.</param>
        <param name="customTags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public MonoDevelop.Core.PropertyDictionary Properties { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>MonoDevelop.Core.PropertyDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>This class parses internal ${xyz} tags of MonoDevelop.</summary>
    <remarks>This class parses internal ${xyz} tags of MonoDevelop. All environment variables are avaible under the name env.[NAME] where [NAME] represents the string under which it is avaiable in the environment.</remarks>
  </Docs>
</Type>
