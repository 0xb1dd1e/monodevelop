// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace IgeMacIntegration {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public  class IgeMacBundle : GLib.Object {

		[Obsolete]
		protected IgeMacBundle(GLib.GType gtype) : base(gtype) {}
		public IgeMacBundle(IntPtr raw) : base(raw) {}

		[DllImport("libigemacintegration.dylib")]
		static extern IntPtr ige_mac_bundle_new();

		public IgeMacBundle () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (IgeMacBundle)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = ige_mac_bundle_new();
		}

		[DllImport("libigemacintegration.dylib")]
		static extern IntPtr ige_mac_bundle_get_resource_path(IntPtr raw, IntPtr name, IntPtr type, IntPtr subdir);

		public string GetResourcePath(string name, string type, string subdir) {
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr native_type = GLib.Marshaller.StringToPtrGStrdup (type);
			IntPtr native_subdir = GLib.Marshaller.StringToPtrGStrdup (subdir);
			IntPtr raw_ret = ige_mac_bundle_get_resource_path(Handle, native_name, native_type, native_subdir);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_name);
			GLib.Marshaller.Free (native_type);
			GLib.Marshaller.Free (native_subdir);
			return ret;
		}

		[DllImport("libigemacintegration.dylib")]
		static extern IntPtr ige_mac_bundle_get_id(IntPtr raw);

		public string Id { 
			get {
				IntPtr raw_ret = ige_mac_bundle_get_id(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("libigemacintegration.dylib")]
		static extern IntPtr ige_mac_bundle_get_path(IntPtr raw);

		public string Path { 
			get {
				IntPtr raw_ret = ige_mac_bundle_get_path(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("libigemacintegration.dylib")]
		static extern IntPtr ige_mac_bundle_get_datadir(IntPtr raw);

		public string Datadir { 
			get {
				IntPtr raw_ret = ige_mac_bundle_get_datadir(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("libigemacintegration.dylib")]
		static extern IntPtr ige_mac_bundle_get_default();

		public static IgeMacIntegration.IgeMacBundle Default { 
			get {
				IntPtr raw_ret = ige_mac_bundle_get_default();
				IgeMacIntegration.IgeMacBundle ret = GLib.Object.GetObject(raw_ret) as IgeMacIntegration.IgeMacBundle;
				return ret;
			}
		}

		[DllImport("libigemacintegration.dylib")]
		static extern void ige_mac_bundle_setup_environment(IntPtr raw);

		public void SetupEnvironment() {
			ige_mac_bundle_setup_environment(Handle);
		}

		[DllImport("libigemacintegration.dylib")]
		static extern IntPtr ige_mac_bundle_get_localedir(IntPtr raw);

		public string Localedir { 
			get {
				IntPtr raw_ret = ige_mac_bundle_get_localedir(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("libigemacintegration.dylib")]
		static extern bool ige_mac_bundle_get_is_app_bundle(IntPtr raw);

		public bool IsAppBundle { 
			get {
				bool raw_ret = ige_mac_bundle_get_is_app_bundle(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libigemacintegration.dylib")]
		static extern IntPtr ige_mac_bundle_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = ige_mac_bundle_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}


		static IgeMacBundle ()
		{
			GtkSharp.IgemacintegrationSharp.ObjectManager.Initialize ();
		}
#endregion
	}
}
