// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Ide.Gui.Dialogs {
    
    
    public partial class CustomExecutionModeDialog {
        
        private Gtk.VBox boxEditor;
        
        private Gtk.VBox boxSave;
        
        private Gtk.HSeparator hseparator2;
        
        private Gtk.CheckButton checkSave;
        
        private Gtk.HBox boxName;
        
        private Gtk.Label label4;
        
        private Gtk.Entry entryModeName;
        
        private Gtk.Button buttonCancel;
        
        private Gtk.Button buttonOk;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoDevelop.Ide.Gui.Dialogs.CustomExecutionModeDialog
            this.Name = "MonoDevelop.Ide.Gui.Dialogs.CustomExecutionModeDialog";
            this.Title = Mono.Unix.Catalog.GetString("Custom Arguments");
            this.WindowPosition = ((Gtk.WindowPosition)(4));
            // Internal child MonoDevelop.Ide.Gui.Dialogs.CustomExecutionModeDialog.VBox
            Gtk.VBox w1 = this.VBox;
            w1.Name = "dialog1_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog1_VBox.Gtk.Box+BoxChild
            this.boxEditor = new Gtk.VBox();
            this.boxEditor.Name = "boxEditor";
            this.boxEditor.Spacing = 9;
            this.boxEditor.BorderWidth = ((uint)(6));
            // Container child boxEditor.Gtk.Box+BoxChild
            this.boxSave = new Gtk.VBox();
            this.boxSave.Name = "boxSave";
            this.boxSave.Spacing = 6;
            // Container child boxSave.Gtk.Box+BoxChild
            this.hseparator2 = new Gtk.HSeparator();
            this.hseparator2.Name = "hseparator2";
            this.boxSave.Add(this.hseparator2);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.boxSave[this.hseparator2]));
            w2.Position = 0;
            w2.Expand = false;
            w2.Fill = false;
            // Container child boxSave.Gtk.Box+BoxChild
            this.checkSave = new Gtk.CheckButton();
            this.checkSave.CanFocus = true;
            this.checkSave.Name = "checkSave";
            this.checkSave.Label = Mono.Unix.Catalog.GetString("Save this configuration as a custom execution mode");
            this.checkSave.DrawIndicator = true;
            this.checkSave.UseUnderline = true;
            this.boxSave.Add(this.checkSave);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.boxSave[this.checkSave]));
            w3.Position = 1;
            w3.Expand = false;
            w3.Fill = false;
            // Container child boxSave.Gtk.Box+BoxChild
            this.boxName = new Gtk.HBox();
            this.boxName.Name = "boxName";
            this.boxName.Spacing = 6;
            // Container child boxName.Gtk.Box+BoxChild
            this.label4 = new Gtk.Label();
            this.label4.Name = "label4";
            this.label4.LabelProp = Mono.Unix.Catalog.GetString("Name:");
            this.boxName.Add(this.label4);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.boxName[this.label4]));
            w4.Position = 0;
            w4.Expand = false;
            w4.Fill = false;
            // Container child boxName.Gtk.Box+BoxChild
            this.entryModeName = new Gtk.Entry();
            this.entryModeName.CanFocus = true;
            this.entryModeName.Name = "entryModeName";
            this.entryModeName.IsEditable = true;
            this.entryModeName.InvisibleChar = '‚óè';
            this.boxName.Add(this.entryModeName);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.boxName[this.entryModeName]));
            w5.Position = 1;
            this.boxSave.Add(this.boxName);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.boxSave[this.boxName]));
            w6.Position = 2;
            w6.Expand = false;
            w6.Fill = false;
            this.boxEditor.Add(this.boxSave);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.boxEditor[this.boxSave]));
            w7.PackType = ((Gtk.PackType)(1));
            w7.Position = 1;
            w7.Expand = false;
            w7.Fill = false;
            w1.Add(this.boxEditor);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w1[this.boxEditor]));
            w8.Position = 0;
            // Internal child MonoDevelop.Ide.Gui.Dialogs.CustomExecutionModeDialog.ActionArea
            Gtk.HButtonBox w9 = this.ActionArea;
            w9.Name = "dialog1_ActionArea";
            w9.Spacing = 10;
            w9.BorderWidth = ((uint)(5));
            w9.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonCancel = new Gtk.Button();
            this.buttonCancel.CanDefault = true;
            this.buttonCancel.CanFocus = true;
            this.buttonCancel.Name = "buttonCancel";
            this.buttonCancel.UseStock = true;
            this.buttonCancel.UseUnderline = true;
            this.buttonCancel.Label = "gtk-cancel";
            this.AddActionWidget(this.buttonCancel, -6);
            Gtk.ButtonBox.ButtonBoxChild w10 = ((Gtk.ButtonBox.ButtonBoxChild)(w9[this.buttonCancel]));
            w10.Expand = false;
            w10.Fill = false;
            // Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            this.buttonOk = new Gtk.Button();
            this.buttonOk.CanDefault = true;
            this.buttonOk.CanFocus = true;
            this.buttonOk.Name = "buttonOk";
            this.buttonOk.UseStock = true;
            this.buttonOk.UseUnderline = true;
            this.buttonOk.Label = "gtk-ok";
            this.AddActionWidget(this.buttonOk, -5);
            Gtk.ButtonBox.ButtonBoxChild w11 = ((Gtk.ButtonBox.ButtonBoxChild)(w9[this.buttonOk]));
            w11.Position = 1;
            w11.Expand = false;
            w11.Fill = false;
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.DefaultWidth = 525;
            this.DefaultHeight = 409;
            this.boxName.Hide();
            this.Show();
            this.checkSave.Toggled += new System.EventHandler(this.OnCheckSaveToggled);
        }
    }
}
