// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Ide.CodeFormatting {
    
    
    public partial class CodeFormattingPolicyPanelWidget {
        
        private Gtk.VBox vbox2;
        
        private Gtk.HPaned hpaned1;
        
        private Gtk.VBox vbox3;
        
        private Gtk.Notebook notebookCategories;
        
        private Gtk.Label label5;
        
        private Gtk.ComboBox comboboxValue;
        
        private Gtk.VBox vbox4;
        
        private Gtk.HBox hbox2;
        
        private Gtk.Label label3;
        
        private Gtk.Fixed fixed1;
        
        private Gtk.CheckButton checkbuttonWhiteSpaces;
        
        private Gtk.ScrolledWindow scrolledwindow2;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget MonoDevelop.Ide.CodeFormatting.CodeFormattingPolicyPanelWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "MonoDevelop.Ide.CodeFormatting.CodeFormattingPolicyPanelWidget";
            // Container child MonoDevelop.Ide.CodeFormatting.CodeFormattingPolicyPanelWidget.Gtk.Container+ContainerChild
            this.vbox2 = new Gtk.VBox();
            this.vbox2.Name = "vbox2";
            this.vbox2.Spacing = 6;
            // Container child vbox2.Gtk.Box+BoxChild
            this.hpaned1 = new Gtk.HPaned();
            this.hpaned1.CanFocus = true;
            this.hpaned1.Name = "hpaned1";
            this.hpaned1.Position = 264;
            // Container child hpaned1.Gtk.Paned+PanedChild
            this.vbox3 = new Gtk.VBox();
            this.vbox3.Name = "vbox3";
            this.vbox3.Spacing = 6;
            // Container child vbox3.Gtk.Box+BoxChild
            this.notebookCategories = new Gtk.Notebook();
            this.notebookCategories.CanFocus = true;
            this.notebookCategories.Name = "notebookCategories";
            this.notebookCategories.CurrentPage = 0;
            // Notebook tab
            Gtk.Label w1 = new Gtk.Label();
            w1.Visible = true;
            this.notebookCategories.Add(w1);
            this.label5 = new Gtk.Label();
            this.label5.Name = "label5";
            this.label5.LabelProp = Mono.Unix.Catalog.GetString("page1");
            this.notebookCategories.SetTabLabel(w1, this.label5);
            this.label5.ShowAll();
            this.vbox3.Add(this.notebookCategories);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox3[this.notebookCategories]));
            w2.Position = 0;
            // Container child vbox3.Gtk.Box+BoxChild
            this.comboboxValue = Gtk.ComboBox.NewText();
            this.comboboxValue.Name = "comboboxValue";
            this.vbox3.Add(this.comboboxValue);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox3[this.comboboxValue]));
            w3.Position = 1;
            w3.Expand = false;
            w3.Fill = false;
            this.hpaned1.Add(this.vbox3);
            Gtk.Paned.PanedChild w4 = ((Gtk.Paned.PanedChild)(this.hpaned1[this.vbox3]));
            w4.Resize = false;
            // Container child hpaned1.Gtk.Paned+PanedChild
            this.vbox4 = new Gtk.VBox();
            this.vbox4.Name = "vbox4";
            this.vbox4.Spacing = 6;
            // Container child vbox4.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.label3 = new Gtk.Label();
            this.label3.Name = "label3";
            this.label3.LabelProp = Mono.Unix.Catalog.GetString("Preview:");
            this.hbox2.Add(this.label3);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.hbox2[this.label3]));
            w5.Position = 0;
            w5.Expand = false;
            w5.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.fixed1 = new Gtk.Fixed();
            this.fixed1.Name = "fixed1";
            this.fixed1.HasWindow = false;
            this.hbox2.Add(this.fixed1);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox2[this.fixed1]));
            w6.Position = 1;
            // Container child hbox2.Gtk.Box+BoxChild
            this.checkbuttonWhiteSpaces = new Gtk.CheckButton();
            this.checkbuttonWhiteSpaces.CanFocus = true;
            this.checkbuttonWhiteSpaces.Name = "checkbuttonWhiteSpaces";
            this.checkbuttonWhiteSpaces.Label = Mono.Unix.Catalog.GetString("S_how whitespaces");
            this.checkbuttonWhiteSpaces.DrawIndicator = true;
            this.checkbuttonWhiteSpaces.UseUnderline = true;
            this.hbox2.Add(this.checkbuttonWhiteSpaces);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.hbox2[this.checkbuttonWhiteSpaces]));
            w7.Position = 2;
            w7.Expand = false;
            this.vbox4.Add(this.hbox2);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(this.vbox4[this.hbox2]));
            w8.Position = 0;
            w8.Expand = false;
            w8.Fill = false;
            // Container child vbox4.Gtk.Box+BoxChild
            this.scrolledwindow2 = new Gtk.ScrolledWindow();
            this.scrolledwindow2.CanFocus = true;
            this.scrolledwindow2.Name = "scrolledwindow2";
            this.scrolledwindow2.ShadowType = ((Gtk.ShadowType)(1));
            this.vbox4.Add(this.scrolledwindow2);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(this.vbox4[this.scrolledwindow2]));
            w9.Position = 1;
            this.hpaned1.Add(this.vbox4);
            this.vbox2.Add(this.hpaned1);
            Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(this.vbox2[this.hpaned1]));
            w11.Position = 0;
            this.Add(this.vbox2);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Hide();
        }
    }
}
