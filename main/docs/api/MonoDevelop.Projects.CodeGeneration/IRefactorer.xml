<Type Name="IRefactorer" FullName="MonoDevelop.Projects.CodeGeneration.IRefactorer">
  <TypeSignature Language="C#" Value="public interface IRefactorer" />
  <AssemblyInfo>
    <AssemblyName>MonoDevelop.Projects</AssemblyName>
    <AssemblyVersion>0.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Members>
    <Member MemberName="CreateClass">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass CreateClass (MonoDevelop.Projects.CodeGeneration.RefactorerContext ctx, string directory, string namspace, System.CodeDom.CodeTypeDeclaration type);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MonoDevelop.Projects.CodeGeneration.RefactorerContext" />
        <Parameter Name="directory" Type="System.String" />
        <Parameter Name="namspace" Type="System.String" />
        <Parameter Name="type" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="directory">To be added.</param>
        <param name="namspace">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameClass">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IClass RenameClass (MonoDevelop.Projects.CodeGeneration.RefactorerContext ctx, MonoDevelop.Projects.Parser.IClass cls, string newName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>MonoDevelop.Projects.Parser.IClass</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MonoDevelop.Projects.CodeGeneration.RefactorerContext" />
        <Parameter Name="cls" Type="MonoDevelop.Projects.Parser.IClass" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="cls">To be added.</param>
        <param name="newName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindClassReferences">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.CodeGeneration.MemberReferenceCollection FindClassReferences (MonoDevelop.Projects.CodeGeneration.RefactorerContext ctx, string fileName, MonoDevelop.Projects.Parser.IClass cls);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>MonoDevelop.Projects.CodeGeneration.MemberReferenceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MonoDevelop.Projects.CodeGeneration.RefactorerContext" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="cls" Type="MonoDevelop.Projects.Parser.IClass" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="fileName">To be added.</param>
        <param name="cls">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMember">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IMember AddMember (MonoDevelop.Projects.CodeGeneration.RefactorerContext ctx, MonoDevelop.Projects.Parser.IClass cls, System.CodeDom.CodeTypeMember memberInfo);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>MonoDevelop.Projects.Parser.IMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MonoDevelop.Projects.CodeGeneration.RefactorerContext" />
        <Parameter Name="cls" Type="MonoDevelop.Projects.Parser.IClass" />
        <Parameter Name="memberInfo" Type="System.CodeDom.CodeTypeMember" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="cls">To be added.</param>
        <param name="memberInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMember">
      <MemberSignature Language="C#" Value="public void RemoveMember (MonoDevelop.Projects.CodeGeneration.RefactorerContext ctx, MonoDevelop.Projects.Parser.IClass cls, MonoDevelop.Projects.Parser.IMember member);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MonoDevelop.Projects.CodeGeneration.RefactorerContext" />
        <Parameter Name="cls" Type="MonoDevelop.Projects.Parser.IClass" />
        <Parameter Name="member" Type="MonoDevelop.Projects.Parser.IMember" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="cls">To be added.</param>
        <param name="member">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameMember">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IMember RenameMember (MonoDevelop.Projects.CodeGeneration.RefactorerContext ctx, MonoDevelop.Projects.Parser.IClass cls, MonoDevelop.Projects.Parser.IMember member, string newName);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>MonoDevelop.Projects.Parser.IMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MonoDevelop.Projects.CodeGeneration.RefactorerContext" />
        <Parameter Name="cls" Type="MonoDevelop.Projects.Parser.IClass" />
        <Parameter Name="member" Type="MonoDevelop.Projects.Parser.IMember" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="cls">To be added.</param>
        <param name="member">To be added.</param>
        <param name="newName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceMember">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.Parser.IMember ReplaceMember (MonoDevelop.Projects.CodeGeneration.RefactorerContext ctx, MonoDevelop.Projects.Parser.IClass cls, MonoDevelop.Projects.Parser.IMember oldMember, System.CodeDom.CodeTypeMember memberInfo);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>MonoDevelop.Projects.Parser.IMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MonoDevelop.Projects.CodeGeneration.RefactorerContext" />
        <Parameter Name="cls" Type="MonoDevelop.Projects.Parser.IClass" />
        <Parameter Name="oldMember" Type="MonoDevelop.Projects.Parser.IMember" />
        <Parameter Name="memberInfo" Type="System.CodeDom.CodeTypeMember" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="cls">To be added.</param>
        <param name="oldMember">To be added.</param>
        <param name="memberInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMemberReferences">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.CodeGeneration.MemberReferenceCollection FindMemberReferences (MonoDevelop.Projects.CodeGeneration.RefactorerContext ctx, string fileName, MonoDevelop.Projects.Parser.IClass cls, MonoDevelop.Projects.Parser.IMember member);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>MonoDevelop.Projects.CodeGeneration.MemberReferenceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctx" Type="MonoDevelop.Projects.CodeGeneration.RefactorerContext" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="cls" Type="MonoDevelop.Projects.Parser.IClass" />
        <Parameter Name="member" Type="MonoDevelop.Projects.Parser.IMember" />
      </Parameters>
      <Docs>
        <param name="ctx">To be added.</param>
        <param name="fileName">To be added.</param>
        <param name="cls">To be added.</param>
        <param name="member">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedOperations">
      <MemberSignature Language="C#" Value="public MonoDevelop.Projects.CodeGeneration.RefactorOperations SupportedOperations { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>MonoDevelop.Projects.CodeGeneration.RefactorOperations</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
