#!/bin/sh

# Author: Marc Christensen (mchristensen@novell.com)
#         Michael Hutchinson (mhutchinson@novell.com)

DIR=$(cd "$(dirname "$0")"; pwd)

MONO_FRAMEWORK_PATH=$DIR/../Frameworks/Mono.framework/Versions/Current
export DYLD_FALLBACK_LIBRARY_PATH=$MONO_FRAMEWORK_PATH/lib:/lib:/usr/lib
export MONO_GAC_PREFIX=$MONO_FRAMEWORK_PATH
export MONO_PATH=$MONO_FRAMEWORK_PATH/lib/mono:$MONO_FRAMEWORK_PATH/lib/gtk-sharp-2.0:$MONO_FRAMEWORK_PATH/lib/mono/2.0:$MONO_FRAMEWORK_PATH/lib/mono/1.0
export MONO_CONFIG=$MONO_FRAMEWORK_PATH/etc/mono/config
export MONO_CFG_DIR=$MONO_FRAMEWORK_PATH/etc
export XDG_DATA_HOME=$MONO_FRAMEWORK_PATH/share
export GDK_PIXBUF_MODULE_FILE=$MONO_FRAMEWORK_PATH/etc/gtk-2.0/gdk-pixbuf.loaders
export GDK_PIXBUF_MODULEDIR=$MONO_FRAMEWORK_PATH/lib/gtk-2.0/2.10.0/loaders
export PANGO_RC_FILE=$MONO_FRAMEWORK_PATH/etc/pango/pangorc
export GTK_DATA_PREFIX=$MONO_FRAMEWORK_PATH
export GTK_EXE_PREFIX=$MONO_FRAMEWORK_PATH
export GTK_PATH=$MONO_FRAMEWORK_PATH/lib/gtk-2.0:$MONO_FRAMEWORK_PATH/lib/gtk-2.0/2.10.0
export GTK2_RC_FILES=$MONO_FRAMEWORK_PATH/etc/gtk-2.0/gtkrc

echo "Rewriting config files..."
find ${FINAL_INSTALL_DIR} -name '*.config.in' -execdir "${DIR}/replacePath.sh" {} \;
find ${FINAL_INSTALL_DIR} -name '*.pc.in' -execdir "${DIR}/replacePath.sh" {} \;
find ${FINAL_INSTALL_DIR} -name '*.loaders.in' -execdir "${DIR}/replacePath.sh" {} \;
"${DIR}/replacePath.sh" "${MONO_FRAMEWORK_PATH}/etc/mono/config.in"
"${DIR}/replacePath.sh" "${MONO_FRAMEWORK_PATH}/etc/pango/pango.modules.in"
"${DIR}/replacePath.sh" "${MONO_FRAMEWORK_PATH}/etc/pango/pangorc"
find ${MONO_FRAMEWORK_PATH}/bin -name '*.in' -execdir "${DIR}/replacePath.sh" {} \;

#we need lots of file handles
ulimit -n 1024

#prevent Macports from messing up mono and pkg-config
export PATH="$MONO_FRAMEWORK_PATH/bin:$PATH"

DIR=$(cd "$(dirname "$0")"; pwd)

EXE_PATH="$DIR/lib/monodevelop/bin/mdrun.exe"

PKG_CONFIG_PATH="$DIR/lib/pkgconfig:$PKG_CONFIG_PATH"
export PKG_CONFIG_PATH

# Work around a bug in 'exec' in older versions of macosx
OSX_VERSION=$(uname -r | cut -f1 -d.)
if [ $OSX_VERSION -lt 9 ]; then  # If OSX version is 10.4
	MONO_EXEC="mono"
else
	MONO_EXEC="exec -a monodevelop mono"
fi

## use an app-specific registry if possible
#if [ -w "$DIR" ]; then
#	export MONO_ADDINS_REGISTRY="$DIR"
#fi

## Moonlight SDK
if [ -d "$DIR/lib/moonlight" ]; then
	export MOONLIGHT_SDK_PATH="$DIR/lib/moonlight"
fi

### END MAC-SPECIFIC SETUP
### Beyond this, all is from the Linux mdtool.in. Only the values of EXE_PATH and MONO_EXEC differ

# NOTE: remove this for stable releases
if [ -z "$MD_NO_DEBUG" ]; then
	_MONO_OPTIONS=${MONO_OPTIONS:---debug}
else
	_MONO_OPTIONS=$MONO_OPTIONS
fi

$MONO_EXEC $_MONO_OPTIONS "$EXE_PATH" $*

