#!/bin/sh

# Author: Marc Christensen (mchristensen@novell.com)
#         Michael Hutchinson (mhutchinson@novell.com)

MONO_FRAMEWORK_PATH=/Library/Frameworks/Mono.framework/Versions/Current
export DYLD_FALLBACK_LIBRARY_PATH=$MONO_FRAMEWORK_PATH/lib:/lib:/usr/lib

#prevent Macports from messing up mono and pkg-config
export PATH="$MONO_FRAMEWORK_PATH/bin:$PATH"

DIR=$(cd "$(dirname "$0")"; pwd)

# $0 should contain the full path from the root i.e. /Applications/<folder>.app/Contents/MacOS/<script>
EXE_PATH="$DIR/lib/monodevelop/bin/MonoDevelop.exe"

PKG_CONFIG_PATH="$DIR/lib/pkgconfig:$PKG_CONFIG_PATH"
export PKG_CONFIG_PATH

# Work around a bug in 'exec' in older versions of macosx
OSX_VERSION=$(uname -r | cut -f1 -d.)
if [ $OSX_VERSION -lt 9 ]; then  # If OSX version is 10.4
	MONO_EXEC="exec mono"
else
	MONO_EXEC="exec -a monodevelop mono"
fi

#mono version check

REQUIRED_MAJOR=2
REQUIRED_MINOR=4
APPNAME="MonoDevelop"
VERSION_TITLE="Cannot launch $APPNAME"
VERSION_MSG="$APPNAME requires the Mono Framework version $REQUIRED_MAJOR.$REQUIRED_MINOR or later."
DOWNLOAD_URL="http://www.go-mono.com/mono-downloads/download.html"

if ! /Library/Frameworks/Mono.framework/Versions/Current/bin/pkg-config --atleast-version=$REQUIRED_MAJOR.$REQUIRED_MINOR mono; then
	osascript \
	-e "set question to display dialog \"$VERSION_MSG\" with title \"$VERSION_TITLE\" buttons {\"Cancel\", \"Download...\"} default button 2" \
	-e "if button returned of question is equal to \"Download...\" then open location \"$DOWNLOAD_URL\""
	echo "$VERSION_TITLE"
	echo "$VERSION_MSG"
	exit 1
fi

# this check should be removed when we require 2.6, which will have an updateinfo
# This check is broken if you upgrade Mono to 2.6, or if you have your own Mono,
#
# Do not enable this code without getting approval from Miguel
#
#if [ ! -f '/Library/Frameworks/Mono.framework/Versions/Current/updateinfo' ]; then \
#	STABILITY_MSG="MonoDevelop requires Mono version 2.4.2.3_6 or later for important stability fixes."
#	osascript \
#	-e "set question to display dialog \"$STABILITY_MSG\" with title \"$VERSION_TITLE\" buttons {\"Cancel\", \"Download...\"} default button 2" \
#	-e "if button returned of question is equal to \"Download...\" then open location \"$DOWNLOAD_URL\""
#	echo "$VERSION_TITLE"
#	echo "$VERSION_MSG"
#	exit 1
#fi


## use an app-specific registry if possible
#if [ -w "$DIR" ]; then
#	export MONO_ADDINS_REGISTRY="$DIR"
#fi

## Moonlight SDK
if [ -d "$DIR/lib/MoonSDK" ]; then
        export MOONLIGHT_2_SDK_PATH="$DIR/lib/MoonSDK"
fi

#### END MAC-SPECIFIC SETUP
#### Beyond this, all is from the Linux monodevelop.in. Only the values of EXE_PATH and MONO_EXEC differ

_MD_REDIRECT_LOG="${MD_REDIRECT_LOG:-${XDG_CONFIG_HOME:-$HOME/.config}/MonoDevelop/log}"

# NOTE: remove this for stable releases
if [ -z "$MD_NO_DEBUG" ]; then
	_MONO_OPTIONS=${MONO_OPTIONS:---debug}
else
	_MONO_OPTIONS=$MONO_OPTIONS
fi

if [ -n "$_MD_REDIRECT_LOG" ]; then
	mkdir -p `dirname "$_MD_REDIRECT_LOG"`
	$MONO_EXEC $_MONO_OPTIONS "$EXE_PATH" $* 2>&1 | tee "$_MD_REDIRECT_LOG"
else
	$MONO_EXEC $_MONO_OPTIONS "$EXE_PATH" $*
fi

