.TH "mdtool" 1
.SH NAME
mdtool \- MonoDevelop Application Runner
.SH SYNOPSIS
.B mdtool
<applicationId> ...
.PP
.B mdtool
setup ...
.PP
.B mdtool
-q
.SH DESCRIPTION
.B mdtool 
is a tool that can execute head-less MonoDevelop applications, this
can be used for example to do batch compilations without starting up
the MonoDevelop GUI.
.SH USAGE
.TP
.B  applicationId ...
Runs the specified application.
.TP
.B \/-q
Lists available applications.
.PP
.SH Available Applications
.PP
The list of applications returned by the option -q might be different
depending on which add-ins are installed.
.TP
.B gsetup
Graphical add-in setup utility.
.TP
.B build
Project build tool.   Use this tool to build a solution in the current
directory (this will pull the first file in the directory with the
.mds extension). 
.PP
You would use this option to build packages in a head-less or batch
fashion. 
.TP
.B dbgen
Parser database generation tool.
.TP 
.B project-export
Project conversion tool.
.TP IDE
The MonoDevelop IDE.
.TP generate-makefiles
Makefile generator tool. This can be used to generate makefiles from any project supported by MonoDevelop.
.TP
.B  setup command [arg1, .., argn2]
Runs the MonoDevelop add-in setup command.  You must specify a command
to execute.  If none is provided a list of commands is displayed
.RS
.ne 8
.B Add-in Commands
.RS
.ne 8 
.B install (i) [package-name|package-file]
Installs an add-in or set of addins. The command argument is a list of
files and/or package names. If a package name is provided the package
will be looked out in the registered repositories.  A specific add-in
version can be specified by appending it to.  the package name using
'/' as a separator, like in this example:
MonoDevelop.SourceEditor/0.9.1
.TP
.B uninstall (u) [package-name]
Uninstalls an add-in. The command argument is the name
of the add-in to uninstall.
.TP
.B check-install (ci)
Checks if a package is installed. If it is not, it looks for
the package in the registered repositories, and if found
the package is downloaded and installed, including all
needed dependencies.
.TP
.B  update (up)      
Downloads and installs available updates for installed add-ins.
.TP
.B  list (l) 
Prints a list of all installed add-ins.        
.TP
.B  list-av (la)     
Prints a list of add-ins available to install in the
registered repositories.
.TP
.B  list-update (lu) 
Prints a list of available add-in updates in the registered repositories.
.RE
.B Repository Commands
.RS
.ne 8
.TP
.B  rep-add (ra) url1 [url2 [url2]]
Registers an add-in repository. Several URLs can be provided.
.TP
.B  rep-remove (rr)  url1 [url2 [url2]]
Unregisters an add-in repository. Several URLs can be provided.
.TP
.B  rep-update (ru)  
Updates the lists of addins available in all registered repositories.
.TP
.B  rep-list (rl)    
Shows a list of all registered repositories.
.RE
.B Add-in Registry Commands:
.RS
.ne 8
.TP
.B  reg-update (rgu) 
Looks for changes in add-in directories and updates the registry.
New add-ins will be added and deleted add-ins will be removed.
.TP
.B  reg-build (rgu)  
.TP
.B  info [filename|package-name]
Prints information about an add-in.
.RE
.B Packaging Commands
.RS
.ne 8
.TP
.B  rep-build (rb) path
Scans the provided directory and generates a set of index files with entries
for all add-in packages found in the directory tree. The resulting file
structure is an add-in repository that can be published in a web site or a
shared directory.
.TP
.B  pack (p) file-path
Creates an add-in package (.mpack file) which includes all files
needed to deploy an add-in. The command parameter is the path to
the add-in's configuration file.
.TP
.B  help (h) [command]
Shows help for the given command
.RE
.B Debug Commands:
.RS
.ne 8
.TP
.B dump-file        
Prints the contents of a registry file for debugging.
.RE
.RE
.SH SEE ALSO
.BR
.SH COPYRIGHT
Copyright (C) 2007 Novell, Inc (http://www.novell.com)
.SH MAILING LISTS
Visit http://lists.ximian.com/mailman/listinfo/monodevelop-list for details.
.SH WEB SITE
Visit http://www.monodevelop.com for details
