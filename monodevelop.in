#!/bin/sh

reWrite() {
    ret=""
    WD=`pwd`
    for arg in $*
    do
	if [ -f ./$arg ]
	then
	    ret="$ret $WD/$arg"
	else
	    ret="$ret $arg"
	fi
   done

    echo "$ret"
}

#(NOTE: any changes to this block should be kept in sync with the one in configure.in)
mozilla_script=`which mozilla 2> /dev/null`
firefox_script=`which firefox 2> /dev/null`
if test -n "$MOZILLA_FIVE_HOME"; then
	MOZILLA_HOME=$MOZILLA_FIVE_HOME
elif grep GRE_PATH /etc/gre.d/*.conf > /dev/null 2>&1 ; then
	MOZILLA_HOME=$(grep -h GRE_PATH= /etc/gre.d/*.conf | cut -d '"' -f 2 -d = | head -n 1)
elif test -f @MOZILLA_HOME@/chrome/comm.jar ; then
	MOZILLA_HOME=@MOZILLA_HOME@
elif test -n "$mozilla_script"  && grep "MOZILLA_FIVE_HOME=" $mozilla_script > /dev/null ; then
	MOZILLA_HOME=`grep "MOZILLA_FIVE_HOME=" $mozilla_script | cut -d '"' -f 2 | cut -d '=' -f 2`
elif test -n "$firefox_script" ; then
	if grep "MOZILLA_FIVE_HOME=" $firefox_script > /dev/null ; then
		MOZILLA_HOME=`grep "MOZILLA_FIVE_HOME=" $firefox_script | cut -d '"' -f 2 | cut -d '=' -f 2`
	elif grep "MOZILLA_LIBDIR=" $firefox_script > /dev/null ; then
		MOZILLA_HOME=`grep "MOZILLA_LIBDIR=" $firefox_script | cut -d '"' -f 2 | cut -d '=' -f 2`
	elif grep "moz_libdir=" $firefox_script > /dev/null ; then
		MOZILLA_HOME=`grep "moz_libdir=" $firefox_script | cut -d '"' -f 2 | cut -d '=' -f 2`
	fi
fi
if test -z "$MOZILLA_HOME"; then
	echo "Cannot find mozilla installation directory. Please set MOZILLA_FIVE_HOME to your mozilla directory"
	exit 1
fi

MD_BIN_PATH=@prefix@/lib/monodevelop/bin

if [ -n $LD_LIBRARY_PATH ]; then
	export LD_LIBRARY_PATH=$MOZILLA_HOME:$LD_LIBRARY_PATH
else
	export LD_LIBRARY_PATH=$MOZILLA_HOME
fi

MD_PKG_CONFIG_PATH=@gtksharp_prefix@/lib/pkgconfig/:/usr/lib/pkgconfig/:/usr/local/lib/pkgconfig/:/usr/share/pkgconfig/:/usr/local/share/pkgconfig/

if [ -n $PKG_CONFIG_PATH ]; then
	export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$MD_PKG_CONFIG_PATH
else
	export PKG_CONFIG_PATH=$MD_PKG_CONFIG_PATH
fi

export MOZILLA_FIVE_HOME=$MOZILLA_HOME

ARGS=`reWrite "$@"`
set -- $ARGS

cd $MD_BIN_PATH

case x$1 in
	x--profile)
		exec @RUNTIME@ --profile ./MonoDevelop.exe $@
		exit 0
		;;
	x--debug)
		export MONODEVELOP_DISPATCH_DEBUG=yes
		exec @RUNTIME@ --debug ./MonoDevelop.exe $@
		exit 0
		;;
	x--trace)
		exec @RUNTIME@ --trace ./MonoDevelop.exe $@
		exit 0;
		;;
esac

exec @RUNTIME@ ./MonoDevelop.exe $@

