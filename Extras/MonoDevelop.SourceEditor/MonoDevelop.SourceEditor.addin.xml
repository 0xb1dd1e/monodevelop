<AddIn id          = "MonoDevelop.SourceEditor"
       name        = "MonoDevelop Text Editor"
       author      = "Ben Maurer, Lluis Sanchez"
       copyright   = ""
       url         = ""
       description = "Provides a text editor for the MonoDevelop IDE based on GtkSourceView"
	   category    = "IDE extensions"
       version     = "0.9.0">
	
	<Runtime>
		<Import assembly="MonoDevelop.SourceEditor.dll"/>
		<!-- <Import assembly="../bin/MonoDevelop.SourceEditor.dll"/> -->
		<!-- <Import assembly="../bin/MonoDevelop.DefaultTexteditor.dll"/> -->
	</Runtime>

	<Dependencies>
		<AddIn id="MonoDevelop.Ide" version="0.9.0"/>
	</Dependencies>
	
	<Extension path = "/Workspace/Services">
		<Class id = "SourceViewService" class="MonoDevelop.SourceEditor.SourceViewService" />
	</Extension>
	
	<Extension path = "/SharpDevelop/Dialogs/OptionsDialog/CodingOptions">
		<DialogPanel id = "CodeTemplates"
		             _label = "Code Templates"
		             class = "MonoDevelop.SourceEditor.Gui.OptionPanels.CodeTemplatePane"/>
	</Extension>

	<Extension path = "/SharpDevelop/Views/ProjectBrowser/ContextMenu">
		<!-- AddIn to the Project Add Menu -->
		<!-- <Conditional ownerstate="ProjectSelected">
			<MenuItem id = "ExportToHtml"
			          insertafter = "GenerateDocumentation"
			          insertbefore = "Separator5"
			          _label = "${res:ProjectComponent.ContextMenu.HtmlExport}"
			          class = "MonoDevelop.SourceEditor.EditorCommands.ExportProjectToHtml"/>
		</Conditional> -->
	</Extension>
	
	<!-- <Extension path = "/SharpDevelop/Workbench/MainMenu/Project">
		<Conditional activeproject="*">
			<MenuItem id = "ExportToHtml"
			          insertafter = "GenerateDocumentation"
			          insertbefore = "Separator2"
			          _label = "${res:ProjectComponent.ContextMenu.HtmlExport}"
			          class = "MonoDevelop.SourceEditor.EditorCommands.ExportProjectToHtml"/>
		</Conditional>
	</Extension> -->
	
	<Extension path = "/SharpDevelop/Views/ProjectBrowser/ContextMenu/ProjectBrowserNode">
		<!-- AddIn to the project browser context menu -->
		<!-- <Conditional activeproject="*">
			<MenuItem id = "ExportToHtml"
			          insertafter = "GenerateDocumentation"
			          insertbefore = "SetAsStartupProjectSeparator"
			          _label = "${res:ProjectComponent.ContextMenu.HtmlExport}"
			          class = "MonoDevelop.SourceEditor.EditorCommands.ExportProjectToHtml"/>
		</Conditional> -->
	</Extension>

	<Extension path = "/SharpDevelop/Commands">
		<Command id = "MonoDevelop.SourceEditor.EditorCommands.HighlightingTypeList"
				type = "array|radio"
				_label = "bogus_label" />
		<Command id = "MonoDevelop.SourceEditor.EditorCommands.ShowBufferOptions"
				_label = "Buffer Options"
				icon = "md-properties-icon" />
		<Command id = "MonoDevelop.SourceEditor.EditorCommands.ToggleBookmark"
				icon = "md-toggle-bookmark"
				shortcut = "Control|F2"
				description = "Toggle Bookmark"
				_label = "Toggle Bookmark" />
		<Command id = "MonoDevelop.SourceEditor.EditorCommands.PrevBookmark"
				icon = "md-goto-prevbookmark"
				shortcut = "Shift|F2"
				description = "Previous Bookmark"
				_label = "Previous Bookmark" />
		<Command id = "MonoDevelop.SourceEditor.EditorCommands.NextBookmark"
				icon = "md-goto-nextbookmark"
				shortcut = "F2"
				description = "Next Bookmark"
				_label = "Next Bookmark" />
		<Command id = "MonoDevelop.SourceEditor.EditorCommands.ClearBookmarks"
				icon = "md-clear-all-bookmarks"
				description = "Clear Bookmarks"
				_label = "Clear Bookmarks" />
		<Command id = "MonoDevelop.SourceEditor.EditorCommands.GotoLineNumber"
				_label = "_Goto Line..." 
				description = "Goto line"
				shortcut = "Control|G" />
		<Command id = "MonoDevelop.SourceEditor.EditorCommands.GotoMatchingBrace"
				_label = "Goto Matching _Brace" 
				description = "Goto Matching Brace" 
				shortcut = "Control|B" />
	</Extension>

	<Extension path = "/SharpDevelop/ViewContent/DefaultTextEditor/ContextMenu">
		<CommandItem id = "MonoDevelop.Commands.EditCommands.Cut" />
		<CommandItem id = "MonoDevelop.Commands.EditCommands.Copy" />
		<CommandItem id = "MonoDevelop.Commands.EditCommands.Paste" />
		<CommandItem id = "MonoDevelop.Commands.EditCommands.Delete" />
		<SeparatorItem id = "Separator1" />
		<CommandItem id = "MonoDevelop.Commands.FileCommands.Save" />
		<CommandItem id = "MonoDevelop.Commands.FileCommands.SaveAs" />
		<CommandItem id = "MonoDevelop.Commands.FileCommands.CloseFile" />
		<SeparatorItem id = "Separator2" _label = "-" />
		<CommandItem id = "MonoDevelop.Commands.EditCommands.CommentCode" />
		<CommandItem id = "MonoDevelop.Commands.EditCommands.UncommentCode" />
		<CommandItem id = "MonoDevelop.Commands.EditCommands.IndentSelection" />
		<CommandItem id = "MonoDevelop.Commands.EditCommands.UnIndentSelection" />
		<ItemSet id = "FileMode" _label = "Highlighting Mode">
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.HighlightingTypeList" />
		</ItemSet>
		<SeparatorItem id = "Separator3" />
		<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.ShowBufferOptions" />
	</Extension>

	<Extension path = "/SharpDevelop/Workbench/ToolBar">
		<ItemSet id = "Search" insertafter = "Standard" insertbefore = "Build">
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.Find" />
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.FindNext" />
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.Replace" />
			<SeparatorItem id = "SearchSeparator" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.ToggleBookmark" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.PrevBookmark" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.NextBookmark" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.ClearBookmarks" />
		</ItemSet>
	</Extension>
	
	
	<Extension path = "/SharpDevelop/Workbench/MainMenu">
		<ItemSet id = "Search" insertafter ="View" insertbefore ="Tools" _label = "_Search">
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.Find" />
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.FindPrevious" />
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.FindNext" />
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.FindNextSelection" />
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.Replace" />
			
			<SeparatorItem id = "SearchSeparator" />
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.FindInFiles" />
			<CommandItem id = "MonoDevelop.Ide.Commands.SearchCommands.ReplaceInFiles" />
				
			<SeparatorItem id = "SearchInFilesSeparator" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.ToggleBookmark" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.PrevBookmark" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.NextBookmark" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.ClearBookmarks" />

			<SeparatorItem id = "Separator2" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.GotoLineNumber" />
			<SeparatorItem id = "Separator3" />
			<CommandItem id = "MonoDevelop.SourceEditor.EditorCommands.GotoMatchingBrace" />
		</ItemSet>
	</Extension>
	
	<!--
	<Extension path = "/SharpDevelop/Workbench/MainMenu/Window">
		<Conditional activewindow="MonoDevelop.SourceEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
			<MenuItem id = "SplitTextEditor"
			          insertafter="NxtPrvSeparator"
			          insertbefore="CloseAll"
			          _label = "${res:XML.MainMenu.WindowMenu.Split}"
			          icon  = "Icons.16x16.SplitWindow"
			          description = "${res:XML.MainMenu.WindowMenu.Split.Description}"
			          class ="MonoDevelop.SourceEditor.EditorCommands.SplitTextEditor"/>
		</Conditional> 
	</Extension>
	-->
	
	<!-- <Extension path = "/SharpDevelop/Workbench/MainMenu/Edit">
                <MenuItem insertafter = "Delete" insertbefore = "SelectAll" id = "Separator2" _label = "-" />
                <MenuItem insertafter = "Separator2" insertbefore = "Separator3" id = "Format" _label = "${res:XML.MainMenu.EditMenu.FormatMenu}">
	                <Conditional activewindow="MonoDevelop.SourceEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
                        
                        <MenuItem id = "RemoveLeadingWs" 
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.RlWs}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.RlWs.Description}" 
                                  class ="MonoDevelop.SourceEditor.EditorCommands.RemoveLeadingWS"/>
                        <MenuItem id = "RemoveTrailingWs"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.RtWs}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.RtWs.Description}"
                                  class ="MonoDevelop.SourceEditor.EditorCommands.RemoveTrailingWS"/>
                        <MenuItem id = "Seperator1" _label = "-" />
                        <MenuItem id = "UpperCase"  
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.UpperCase}" 
                                  icon = "Icons.16x16.LowerToUpperCase" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.UpperCase.Description}" 
                                  class ="MonoDevelop.SourceEditor.EditorCommands.ToUpperCase"/>
                        <MenuItem id = "LowerCase" 
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.LowerCase}" 
                                  icon = "Icons.16x16.UpperToLowerCase" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.LowerCase.Description}"
                                  class ="MonoDevelop.SourceEditor.EditorCommands.ToLowerCase"/>
                        <MenuItem id = "Capitalize"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.Capitalize}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.Capitalize.Description}" 
                                  class ="MonoDevelop.SourceEditor.EditorCommands.CapitalizeAction"/>
                        <MenuItem id = "InvertCase"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.InvertCase}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.InvertCase.Description}" 
                                  class ="MonoDevelop.SourceEditor.EditorCommands.InvertCaseAction"/>
                        <MenuItem id = "Separator2" _label = "-" />
                        <MenuItem id = "SortSelection"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.SortLines}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.SortLines.Description}" 
                                  class ="MonoDevelop.SourceEditor.EditorCommands.SortSelection"/>
                        <MenuItem id = "Separator3" _label = "-" />
                        <MenuItem id = "Tabs2Spaces" 
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.Tab2Space}" 
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.Tab2Space.Description}" 
                                  class ="MonoDevelop.SourceEditor.EditorCommands.ConvertTabsToSpaces"/>
                        <MenuItem id = "Spaces2Tabs"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.Space2Tab}"
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.Space2Tab.Description}"
                                  class ="MonoDevelop.SourceEditor.EditorCommands.ConvertSpacesToTabs"/>
                        <MenuItem id = "LeadingTabs2Spaces"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.LdTab2Space}"
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.LdTab2Space.Description}" 
                                  class ="MonoDevelop.SourceEditor.EditorCommands.ConvertLeadingTabsToSpaces"/>
                        <MenuItem id = "LeadingSpaces2Tabs"
                                  _label = "${res:XML.MainMenu.EditMenu.FormatMenu.LdSpace2Tab}"   
                                  description = "${res:XML.MainMenu.EditMenu.FormatMenu.LdSpace2Tab.Description}" 
                                  class ="MonoDevelop.SourceEditor.EditorCommands.ConvertLeadingSpacesToTabs"/>
        		</Conditional>
                </MenuItem>
                <MenuItem insertafter = "Format" insertbefore = "Separator3" id = "Folding" _label = "${res:XML.MainMenu.EditMenu.FoldingMenu}">
	                <Conditional activewindow="MonoDevelop.SourceEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
	                        <MenuItem id          = "ToggleFolding"
        	                          _label       = "${res:XML.MainMenu.EditMenu.FoldingMenu.ToggleFolding}"
                	                  description = "Toggles the current selected folding"
					  shortcut    = "Shift|Control|M"
	                                  class       = "MonoDevelop.SourceEditor.EditorCommands.ToggleFolding"/>
	                        <MenuItem id          = "ToggleAllFoldings"
        	                          _label       = "${res:XML.MainMenu.EditMenu.FoldingMenu.ToggleAllFoldings}"
	         	                  description = "Toggles all foldings" 
       					  shortcut    = "Shift|Control|L"
	                                  class       = "MonoDevelop.SourceEditor.EditorCommands.ToggleAllFoldings"/>
	                        <MenuItem id          = "ShowDefinitionsOnly"
        	                          _label       = "${res:XML.MainMenu.EditMenu.FoldingMenu.ShowDefinitions}"
                	                  description = "Shows only the definitions" 
       					  shortcut    = "Shift|Control|P"
	                                  class       = "MonoDevelop.SourceEditor.EditorCommands.ShowDefinitionsOnly"/>
        		</Conditional>
                </MenuItem>
                <MenuItem insertafter = "Separator2" insertbefore = "SelectAll" id = "Separator3" _label = "-" />
	</Extension> -->

	<Extension path = "/SharpDevelop/ViewContent/DefaultTextEditor/OptionsDialog">
		<DialogPanel id = "General"
		             _label = "General"
		             class = "MonoDevelop.SourceEditor.Gui.OptionPanels.GeneralTextEditorPanel"/>
		<DialogPanel id = "Markers"
		             _label = "Markers and Rulers"
		             class = "MonoDevelop.SourceEditor.Gui.OptionPanels.MarkersTextEditorPanel"/>
		<DialogPanel id = "Behavior"
		             _label = "Behavior"
		             class = "MonoDevelop.SourceEditor.Gui.OptionPanels.BehaviorTextEditorPanel"/>
		<DialogPanel id = "SyntaxHighlighting"
		             _label = "Syntax highlighting"
		             class = "MonoDevelop.SourceEditor.Gui.OptionPanels.SyntaxHighlightingPanel"/>
	</Extension>
	
	<Extension path = "/SharpDevelop/Dialogs/OptionsDialog">
		<DialogPanel id    = "TextEditorOptions"
		             insertafter = "CodingOptions"
		             insertbefore = "ToolsOptions"
		             _label = "Text Editor">
			<DialogPanel id = "General"
			             _label = "General"
			             class = "MonoDevelop.SourceEditor.Gui.OptionPanels.GeneralTextEditorPanel"/>
			<DialogPanel id = "Markers"
			             _label = "Markers And Rulers"
			             class = "MonoDevelop.SourceEditor.Gui.OptionPanels.MarkersTextEditorPanel"/>
			<DialogPanel id = "Behavior"
			             _label = "Behavior"
			             class = "MonoDevelop.SourceEditor.Gui.OptionPanels.BehaviorTextEditorPanel"/>
			<DialogPanel id = "SyntaxHighlighting"
		             _label = "Syntax highlighting"
		             class = "MonoDevelop.SourceEditor.Gui.OptionPanels.SyntaxHighlightingPanel"/>
		</DialogPanel>
	</Extension>

<!--	
	<Extension path = "/SharpDevelop/Workbench/MainMenu/Tools">
		<Conditional activewindow="MonoDevelop.SourceEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
			<MenuItem id = "InsertColor"
			          insertafter = "Separator1" insertbefore = "Separator2"
			          _label = "${res:XML.MainMenu.ToolMenu.InsColor}" 
			          description = "${res:XML.MainMenu.ToolMenu.InsColor.Description}" 
			          class = "MonoDevelop.SourceEditor.EditorCommands.ShowColorDialog"/>
			<MenuItem id = "Separator2" _label = "-" />

			<MenuItem id = "GenerateCodeAction"
			          insertafter = "Separator2"
			          _label = "${res:XML.MainMenu.ToolMenu.GenerateCode}" 
			          description = "${res:XML.MainMenu.ToolMenu.GenerateCode.Description}" 
			          class = "MonoDevelop.SourceEditor.EditorCommands.GenerateCodeAction"/>
			<MenuItem id = "ShowQuickHelp"
			          _label = "${res:XML.MainMenu.ToolMenu.QuickXmlDoc}" 
			          description = "${res:XML.MainMenu.ToolMenu.QuickXmlDoc.Description}" 
			          shortcut = "Control|Q"
			          class = "MonoDevelop.SourceEditor.EditorCommands.QuickDocumentation"/> 
			<MenuItem id = "Separator3" _label = "-" />
		</Conditional>
	</Extension>
-->	
	
	<Extension path = "/AddIns/DefaultTextEditor/EditActions">
		<!-- these are the default editor actions -->
		<EditAction id = "ControlSpace" class = "MonoDevelop.SourceEditor.Actions.ControlSpace" keys = "Control|KP_Space"/>
		<EditAction id = "DeleteLine" class = "MonoDevelop.SourceEditor.Actions.DeleteLine" keys = "Control|k" />
		<EditAction id = "DeleteLine2" class = "MonoDevelop.SourceEditor.Actions.DeleteLine" keys = "Control|l" />
		<EditAction id = "Dot" class = "MonoDevelop.SourceEditor.Actions.Dot" keys = "period"/>
		<EditAction id = "End" class = "MonoDevelop.SourceEditor.Actions.End" keys = "End"/>
		<EditAction id = "F1" class = "MonoDevelop.SourceEditor.Actions.F1" keys = "F1"/>
		<EditAction id = "Home" class = "MonoDevelop.SourceEditor.Actions.Home" keys = "Home"/>
		<EditAction id = "ScrollUp" class = "MonoDevelop.SourceEditor.Actions.ScrollUp" keys = "Control|Up"/>
		<EditAction id = "ScrollDown" class = "MonoDevelop.SourceEditor.Actions.ScrollDown" keys = "Control|Down"/>
		<EditAction id = "ShiftTab" class = "MonoDevelop.SourceEditor.Actions.ShiftTab" keys = "Shift|ISO_Left_Tab"/>
		<EditAction id = "Space" class = "MonoDevelop.SourceEditor.Actions.Space" keys = "KP_Space"/>
		<EditAction id = "Tab" class = "MonoDevelop.SourceEditor.Actions.Tab" keys = "Tab"/>
	</Extension>

	<Extension path = "/SharpDevelop/Workbench/DisplayBindings">
		<DisplayBinding id    = "NewText"
		       supportedformats = "Text Files,Source Files"
		       class = "MonoDevelop.SourceEditor.Gui.SourceEditorDisplayBinding" />
	</Extension>
	
</AddIn>
