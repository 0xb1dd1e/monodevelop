// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic.SteticGenerated {
    
    
    internal class MonoDevelopChangeLogAddInAddLogEntryDialog {
        
        public static void Build(Gtk.Dialog cobj) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            // Widget MonoDevelop.ChangeLogAddIn.AddLogEntryDialog
            cobj.Events = ((Gdk.EventMask)(256));
            cobj.Name = "MonoDevelop.ChangeLogAddIn.AddLogEntryDialog";
            cobj.Title = "ChangeLog";
            // Internal child MonoDevelop.ChangeLogAddIn.AddLogEntryDialog.VBox
            Gtk.VBox w1 = cobj.VBox;
            w1.Events = ((Gdk.EventMask)(256));
            w1.Name = "dialog_VBox";
            w1.BorderWidth = ((uint)(2));
            // Container child dialog_VBox.Gtk.Box+BoxChild
            Gtk.VBox w2 = new Gtk.VBox();
            bindings["vbox1"] = w2;
            w2.Name = "vbox1";
            w2.Spacing = 6;
            w2.BorderWidth = ((uint)(12));
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.Label w3 = new Gtk.Label();
            bindings["label3"] = w3;
            w3.Name = "label3";
            w3.Xalign = 0F;
            w3.LabelProp = "ChangeLog entry:";
            w2.Add(w3);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(w2[w3]));
            w4.Position = 0;
            w4.Expand = false;
            w4.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.ScrolledWindow w5 = new Gtk.ScrolledWindow();
            bindings["scrolledwindow1"] = w5;
            w5.CanFocus = true;
            w5.Name = "scrolledwindow1";
            w5.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            w5.HscrollbarPolicy = ((Gtk.PolicyType)(1));
            w5.ShadowType = ((Gtk.ShadowType)(1));
            // Container child scrolledwindow1.Gtk.Container+ContainerChild
            Gtk.TextView w6 = new Gtk.TextView();
            bindings["textview"] = w6;
            w6.CanFocus = true;
            w6.Name = "textview";
            w5.Add(w6);
            w2.Add(w5);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w2[w5]));
            w8.Position = 1;
            w1.Add(w2);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(w1[w2]));
            w9.Position = 0;
            // Internal child MonoDevelop.ChangeLogAddIn.AddLogEntryDialog.ActionArea
            Gtk.HButtonBox w10 = cobj.ActionArea;
            w10.Events = ((Gdk.EventMask)(256));
            w10.Name = "ChangeLogAddIn.AddLogEntryDialog_ActionArea";
            w10.Spacing = 10;
            w10.BorderWidth = ((uint)(5));
            w10.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child ChangeLogAddIn.AddLogEntryDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            Gtk.Button w11 = new Gtk.Button();
            bindings["button7"] = w11;
            w11.CanDefault = true;
            w11.CanFocus = true;
            w11.Name = "button7";
            w11.UseStock = true;
            w11.UseUnderline = true;
            w11.Label = "gtk-cancel";
            cobj.AddActionWidget(w11, -6);
            Gtk.ButtonBox.ButtonBoxChild w12 = ((Gtk.ButtonBox.ButtonBoxChild)(w10[w11]));
            w12.Expand = false;
            w12.Fill = false;
            // Container child ChangeLogAddIn.AddLogEntryDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
            Gtk.Button w13 = new Gtk.Button();
            bindings["button119"] = w13;
            w13.CanDefault = true;
            w13.CanFocus = true;
            w13.Name = "button119";
            w13.UseStock = true;
            w13.UseUnderline = true;
            w13.Label = "gtk-ok";
            cobj.AddActionWidget(w13, -5);
            Gtk.ButtonBox.ButtonBoxChild w14 = ((Gtk.ButtonBox.ButtonBoxChild)(w10[w13]));
            w14.Position = 1;
            w14.Expand = false;
            w14.Fill = false;
            if ((cobj.Child != null)) {
                cobj.Child.ShowAll();
            }
            cobj.DefaultWidth = 553;
            cobj.DefaultHeight = 309;
            cobj.Show();
            System.Reflection.FieldInfo[] fields = cobj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(cobj, widget);
                }
            }
        }
    }
}
