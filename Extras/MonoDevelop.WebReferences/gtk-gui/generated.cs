// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic {
    
    internal class Gui {
        
        public static void Build(object obj, System.Type type) {
            Stetic.Gui.Build(obj, type.FullName);
        }
        
        public static void Build(object obj, string id) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            if ((id == "MonoDevelop.WebReferences.Dialogs.WebReferenceDialog")) {
                Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                // Widget MonoDevelop.WebReferences.Dialogs.WebReferenceDialog
                Gtk.UIManager w1 = new Gtk.UIManager();
                Gtk.ActionGroup w2 = new Gtk.ActionGroup("Default");
                Gtk.Action w3 = new Gtk.Action("btnBack", null, "Go back one page", "gtk-go-back");
                bindings["btnBack"] = w3;
                w2.Add(w3, null);
                Gtk.Action w4 = new Gtk.Action("btnNext", null, "Go forward one page", "gtk-go-forward");
                bindings["btnNext"] = w4;
                w2.Add(w4, null);
                Gtk.Action w5 = new Gtk.Action("btnRefresh", null, "Reload current page", "gtk-refresh");
                bindings["btnRefresh"] = w5;
                w2.Add(w5, null);
                Gtk.Action w6 = new Gtk.Action("btnStop", null, "Stop loading this page", "gtk-stop");
                bindings["btnStop"] = w6;
                w2.Add(w6, null);
                Gtk.Action w7 = new Gtk.Action("btnHome", null, "Go back to the home page", "gtk-home");
                bindings["btnHome"] = w7;
                w2.Add(w7, null);
                w1.InsertActionGroup(w2, 0);
                cobj.AddAccelGroup(w1.AccelGroup);
                cobj.Title = "Add Web Reference";
                cobj.Icon = Gdk.Pixbuf.LoadFromResource("WebReference.Service.png");
                cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                cobj.HasSeparator = false;
                cobj.Events = ((Gdk.EventMask)(256));
                cobj.Name = "MonoDevelop.WebReferences.Dialogs.WebReferenceDialog";
                // Internal child MonoDevelop.WebReferences.Dialogs.WebReferenceDialog.VBox
                Gtk.VBox w8 = cobj.VBox;
                w8.BorderWidth = ((uint)(2));
                w8.Events = ((Gdk.EventMask)(256));
                w8.Name = "dlgWindow";
                // Container child dlgWindow.Gtk.Box+BoxChild
                Gtk.VBox w9 = new Gtk.VBox();
                w9.Events = ((Gdk.EventMask)(0));
                w9.Name = "vbxContainer";
                // Container child vbxContainer.Gtk.Box+BoxChild
                w1.AddUiFromString("<ui><toolbar name='tlbNavigate'><toolitem action='btnBack'/><toolitem action='btnNext'/><toolitem action='btnRefresh'/><toolitem action='btnStop'/><toolitem action='btnHome'/></toolbar></ui>");
                Gtk.Toolbar w10 = ((Gtk.Toolbar)(w1.GetWidget("/tlbNavigate")));
                w10.ShowArrow = false;
                w10.ToolbarStyle = ((Gtk.ToolbarStyle)(0));
                w10.IconSize = ((Gtk.IconSize)(2));
                w10.Events = ((Gdk.EventMask)(0));
                w10.Name = "tlbNavigate";
                bindings["tlbNavigate"] = w10;
                w9.Add(w10);
                Gtk.Box.BoxChild w11 = ((Gtk.Box.BoxChild)(w9[w10]));
                w11.Position = 0;
                w11.Expand = false;
                w11.Fill = false;
                // Container child vbxContainer.Gtk.Box+BoxChild
                Gtk.Table w12 = new Gtk.Table(((uint)(1)), ((uint)(3)), false);
                w12.Events = ((Gdk.EventMask)(0));
                w12.Name = "tblWebReferenceUrl";
                // Container child tblWebReferenceUrl.Gtk.Table+TableChild
                Gtk.Label w13 = new Gtk.Label();
                w13.LabelProp = "Web Service Url: ";
                w13.Xalign = 0F;
                w13.Events = ((Gdk.EventMask)(0));
                w13.Name = "lblWebServiceUrl";
                bindings["lblWebServiceUrl"] = w13;
                w12.Add(w13);
                Gtk.Table.TableChild w14 = ((Gtk.Table.TableChild)(w12[w13]));
                w14.YPadding = ((uint)(4));
                w14.XPadding = ((uint)(4));
                w14.YOptions = ((Gtk.AttachOptions)(4));
                w14.XOptions = ((Gtk.AttachOptions)(4));
                // Container child tblWebReferenceUrl.Gtk.Table+TableChild
                Gtk.Entry w15 = new Gtk.Entry();
                w15.IsEditable = true;
                w15.InvisibleChar = '●';
                w15.CanFocus = true;
                w15.Events = ((Gdk.EventMask)(0));
                w15.Name = "tbxReferenceURL";
                bindings["tbxReferenceURL"] = w15;
                w12.Add(w15);
                Gtk.Table.TableChild w16 = ((Gtk.Table.TableChild)(w12[w15]));
                w16.LeftAttach = ((uint)(1));
                w16.RightAttach = ((uint)(2));
                w16.YOptions = ((Gtk.AttachOptions)(4));
                // Container child tblWebReferenceUrl.Gtk.Table+TableChild
                Gtk.Button w17 = new Gtk.Button();
                w17.UseUnderline = true;
                w17.CanFocus = true;
                w17.Events = ((Gdk.EventMask)(0));
                w17.Name = "btnGO";
                w17.Label = "Go";
                bindings["btnGO"] = w17;
                w12.Add(w17);
                Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(w12[w17]));
                w18.YPadding = ((uint)(4));
                w18.LeftAttach = ((uint)(2));
                w18.XPadding = ((uint)(4));
                w18.RightAttach = ((uint)(3));
                w18.YOptions = ((Gtk.AttachOptions)(4));
                w18.XOptions = ((Gtk.AttachOptions)(0));
                bindings["tblWebReferenceUrl"] = w12;
                w9.Add(w12);
                Gtk.Box.BoxChild w19 = ((Gtk.Box.BoxChild)(w9[w12]));
                w19.Position = 1;
                w19.Expand = false;
                w19.Fill = false;
                // Container child vbxContainer.Gtk.Box+BoxChild
                Gtk.Frame w20 = new Gtk.Frame();
                w20.ShadowType = ((Gtk.ShadowType)(0));
                w20.LabelXalign = 0F;
                w20.LabelYalign = 0F;
                w20.Events = ((Gdk.EventMask)(0));
                w20.Name = "frmBrowser";
                bindings["frmBrowser"] = w20;
                w9.Add(w20);
                Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(w9[w20]));
                w21.Position = 2;
                // Container child vbxContainer.Gtk.Box+BoxChild
                Gtk.Table w22 = new Gtk.Table(((uint)(2)), ((uint)(2)), false);
                w22.RowSpacing = ((uint)(4));
                w22.ColumnSpacing = ((uint)(4));
                w22.Events = ((Gdk.EventMask)(0));
                w22.Name = "tblReferenceName";
                // Container child tblReferenceName.Gtk.Table+TableChild
                Gtk.Label w23 = new Gtk.Label();
                w23.LabelProp = "Reference: ";
                w23.Xalign = 0F;
                w23.Events = ((Gdk.EventMask)(0));
                w23.Name = "lblReference";
                bindings["lblReference"] = w23;
                w22.Add(w23);
                Gtk.Table.TableChild w24 = ((Gtk.Table.TableChild)(w22[w23]));
                w24.YOptions = ((Gtk.AttachOptions)(4));
                w24.XOptions = ((Gtk.AttachOptions)(4));
                // Container child tblReferenceName.Gtk.Table+TableChild
                Gtk.Label w25 = new Gtk.Label();
                w25.LabelProp = "Namespace: ";
                w25.Xalign = 0F;
                w25.Events = ((Gdk.EventMask)(0));
                w25.Name = "lblNamespace";
                bindings["lblNamespace"] = w25;
                w22.Add(w25);
                Gtk.Table.TableChild w26 = ((Gtk.Table.TableChild)(w22[w25]));
                w26.BottomAttach = ((uint)(2));
                w26.TopAttach = ((uint)(1));
                w26.YOptions = ((Gtk.AttachOptions)(4));
                w26.XOptions = ((Gtk.AttachOptions)(4));
                // Container child tblReferenceName.Gtk.Table+TableChild
                Gtk.Entry w27 = new Gtk.Entry();
                w27.IsEditable = true;
                w27.InvisibleChar = '●';
                w27.CanFocus = true;
                w27.Events = ((Gdk.EventMask)(0));
                w27.Name = "tbxReferenceName";
                bindings["tbxReferenceName"] = w27;
                w22.Add(w27);
                Gtk.Table.TableChild w28 = ((Gtk.Table.TableChild)(w22[w27]));
                w28.LeftAttach = ((uint)(1));
                w28.RightAttach = ((uint)(2));
                w28.YOptions = ((Gtk.AttachOptions)(4));
                // Container child tblReferenceName.Gtk.Table+TableChild
                Gtk.Entry w29 = new Gtk.Entry();
                w29.IsEditable = true;
                w29.InvisibleChar = '●';
                w29.CanFocus = true;
                w29.Events = ((Gdk.EventMask)(0));
                w29.Name = "tbxNamespace";
                w29.Sensitive = false;
                bindings["tbxNamespace"] = w29;
                w22.Add(w29);
                Gtk.Table.TableChild w30 = ((Gtk.Table.TableChild)(w22[w29]));
                w30.BottomAttach = ((uint)(2));
                w30.LeftAttach = ((uint)(1));
                w30.RightAttach = ((uint)(2));
                w30.TopAttach = ((uint)(1));
                w30.YOptions = ((Gtk.AttachOptions)(4));
                bindings["tblReferenceName"] = w22;
                w9.Add(w22);
                Gtk.Box.BoxChild w31 = ((Gtk.Box.BoxChild)(w9[w22]));
                w31.Position = 3;
                w31.Expand = false;
                w31.Fill = false;
                bindings["vbxContainer"] = w9;
                w8.Add(w9);
                Gtk.Box.BoxChild w32 = ((Gtk.Box.BoxChild)(w8[w9]));
                w32.Position = 0;
                bindings["dlgWindow"] = w8;
                // Internal child MonoDevelop.WebReferences.Dialogs.WebReferenceDialog.ActionArea
                Gtk.HButtonBox w33 = cobj.ActionArea;
                w33.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                w33.Spacing = 10;
                w33.BorderWidth = ((uint)(5));
                w33.Events = ((Gdk.EventMask)(256));
                w33.Name = "pnlActionArea";
                // Container child pnlActionArea.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w34 = new Gtk.Button();
                w34.UseStock = true;
                w34.UseUnderline = true;
                w34.CanFocus = true;
                w34.Events = ((Gdk.EventMask)(0));
                w34.Name = "btnCancel";
                w34.CanDefault = true;
                w34.Label = "gtk-cancel";
                bindings["btnCancel"] = w34;
                cobj.AddActionWidget(w34, -6);
                Gtk.ButtonBox.ButtonBoxChild w35 = ((Gtk.ButtonBox.ButtonBoxChild)(w33[w34]));
                w35.Expand = false;
                w35.Fill = false;
                // Container child pnlActionArea.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w36 = new Gtk.Button();
                w36.UseStock = true;
                w36.UseUnderline = true;
                w36.CanFocus = true;
                w36.Events = ((Gdk.EventMask)(0));
                w36.Name = "btnOK";
                w36.CanDefault = true;
                w36.Label = "gtk-ok";
                bindings["btnOK"] = w36;
                cobj.AddActionWidget(w36, -5);
                Gtk.ButtonBox.ButtonBoxChild w37 = ((Gtk.ButtonBox.ButtonBoxChild)(w33[w36]));
                w37.Position = 1;
                w37.Expand = false;
                w37.Fill = false;
                bindings["pnlActionArea"] = w33;
                cobj.DefaultWidth = 639;
                cobj.DefaultHeight = 472;
                bindings["MonoDevelop.WebReferences.Dialogs.WebReferenceDialog"] = cobj;
                w10.Show();
                w13.Show();
                w15.Show();
                w17.Show();
                w12.Show();
                w20.Show();
                w23.Show();
                w25.Show();
                w27.Show();
                w29.Show();
                w22.Show();
                w9.Show();
                w8.Show();
                w34.Show();
                w36.Show();
                w33.Show();
                cobj.Show();
                w3.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "Browser_BackButtonClicked")));
                w4.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "Browser_NextButtonClicked")));
                w5.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "Browser_RefreshButtonClicked")));
                w6.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "Browser_StopButtonClicked")));
                w7.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "Browser_HomeButtonClicked")));
                w15.KeyReleaseEvent += ((Gtk.KeyReleaseEventHandler)(System.Delegate.CreateDelegate(typeof(Gtk.KeyReleaseEventHandler), cobj, "Browser_URLKeyReleased")));
            }
            System.Reflection.FieldInfo[] fields = obj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(obj, widget);
                }
            }
        }
    }
    
    internal class ActionGroups {
        
        public static Gtk.ActionGroup GetActionGroup(System.Type type) {
            return Stetic.ActionGroups.GetActionGroup(type.FullName);
        }
        
        public static Gtk.ActionGroup GetActionGroup(string name) {
            return null;
        }
    }
    
}
