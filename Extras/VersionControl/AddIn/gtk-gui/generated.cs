// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic {
    
    
    internal class Gui {
        
        private static bool initialized;
        
        public static void Build(object obj, System.Type type) {
            Stetic.Gui.Build(obj, type.FullName);
        }
        
        public static void Build(object obj, string id) {
            if ((Stetic.Gui.initialized == false)) {
                Stetic.Gui.Initialize();
            }
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            if ((id == "VersionControl.AddIn.Dialogs.SelectRepositoryDialog")) {
                Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                // Widget VersionControl.AddIn.Dialogs.SelectRepositoryDialog
                cobj.Title = Mono.Unix.Catalog.GetString("Select Repository");
                cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                cobj.HasSeparator = false;
                cobj.Events = ((Gdk.EventMask)(256));
                cobj.Name = "VersionControl.AddIn.Dialogs.SelectRepositoryDialog";
                // Internal child VersionControl.AddIn.Dialogs.SelectRepositoryDialog.VBox
                Gtk.VBox w1 = cobj.VBox;
                w1.BorderWidth = ((uint)(2));
                w1.Events = ((Gdk.EventMask)(256));
                w1.Name = "dialog_VBox";
                // Container child dialog_VBox.Gtk.Box+BoxChild
                Gtk.VBox w2 = new Gtk.VBox();
                w2.Spacing = 12;
                w2.BorderWidth = ((uint)(9));
                w2.Events = ((Gdk.EventMask)(0));
                w2.Name = "vbox1";
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.Notebook w3 = new Gtk.Notebook();
                w3.CanFocus = true;
                w3.Events = ((Gdk.EventMask)(0));
                w3.Name = "notebook";
                // Container child notebook.Gtk.Notebook+NotebookChild
                Gtk.VBox w4 = new Gtk.VBox();
                w4.Spacing = 6;
                w4.BorderWidth = ((uint)(6));
                w4.Events = ((Gdk.EventMask)(0));
                w4.Name = "vbox2";
                // Container child vbox2.Gtk.Box+BoxChild
                Gtk.HBox w5 = new Gtk.HBox();
                w5.Spacing = 6;
                w5.Events = ((Gdk.EventMask)(0));
                w5.Name = "hbox1";
                // Container child hbox1.Gtk.Box+BoxChild
                Gtk.Label w6 = new Gtk.Label();
                w6.LabelProp = Mono.Unix.Catalog.GetString("Type:");
                w6.Events = ((Gdk.EventMask)(0));
                w6.Name = "label3";
                bindings["label3"] = w6;
                w5.Add(w6);
                Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(w5[w6]));
                w7.Position = 0;
                w7.Expand = false;
                w7.Fill = false;
                // Container child hbox1.Gtk.Box+BoxChild
                Gtk.ComboBox w8 = Gtk.ComboBox.NewText();
                w8.Events = ((Gdk.EventMask)(0));
                w8.Name = "repCombo";
                bindings["repCombo"] = w8;
                w5.Add(w8);
                Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(w5[w8]));
                w9.Position = 1;
                bindings["hbox1"] = w5;
                w4.Add(w5);
                Gtk.Box.BoxChild w10 = ((Gtk.Box.BoxChild)(w4[w5]));
                w10.Position = 0;
                w10.Expand = false;
                w10.Fill = false;
                // Container child vbox2.Gtk.Box+BoxChild
                Gtk.HSeparator w11 = new Gtk.HSeparator();
                w11.Events = ((Gdk.EventMask)(0));
                w11.Name = "hseparator1";
                bindings["hseparator1"] = w11;
                w4.Add(w11);
                Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(w4[w11]));
                w12.Position = 1;
                w12.Expand = false;
                w12.Fill = false;
                // Container child vbox2.Gtk.Box+BoxChild
                Gtk.EventBox w13 = new Gtk.EventBox();
                w13.Events = ((Gdk.EventMask)(0));
                w13.Name = "repoContainer";
                bindings["repoContainer"] = w13;
                w4.Add(w13);
                Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(w4[w13]));
                w14.Position = 2;
                bindings["vbox2"] = w4;
                w3.Add(w4);
                Gtk.Notebook.NotebookChild w15 = ((Gtk.Notebook.NotebookChild)(w3[w4]));
                w15.TabExpand = false;
                // Notebook tab
                Gtk.Label w16 = new Gtk.Label();
                w16.LabelProp = Mono.Unix.Catalog.GetString("Connect to Repository");
                w16.Events = ((Gdk.EventMask)(0));
                w16.Name = "label1";
                bindings["label1"] = w16;
                w3.SetTabLabel(w4, w16);
                // Container child notebook.Gtk.Notebook+NotebookChild
                Gtk.HBox w17 = new Gtk.HBox();
                w17.Spacing = 6;
                w17.BorderWidth = ((uint)(6));
                w17.Events = ((Gdk.EventMask)(0));
                w17.Name = "hbox2";
                // Container child hbox2.Gtk.Box+BoxChild
                Gtk.ScrolledWindow w18 = new Gtk.ScrolledWindow();
                w18.VscrollbarPolicy = ((Gtk.PolicyType)(1));
                w18.HscrollbarPolicy = ((Gtk.PolicyType)(1));
                w18.ShadowType = ((Gtk.ShadowType)(1));
                w18.CanFocus = true;
                w18.Events = ((Gdk.EventMask)(0));
                w18.Name = "scrolledwindow2";
                // Container child scrolledwindow2.Gtk.Container+ContainerChild
                Gtk.TreeView w19 = new Gtk.TreeView();
                w19.CanFocus = true;
                w19.Events = ((Gdk.EventMask)(0));
                w19.Name = "repoTree";
                bindings["repoTree"] = w19;
                w18.Add(w19);
                bindings["scrolledwindow2"] = w18;
                w17.Add(w18);
                Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(w17[w18]));
                w21.Position = 0;
                // Container child hbox2.Gtk.Box+BoxChild
                Gtk.VButtonBox w22 = new Gtk.VButtonBox();
                w22.LayoutStyle = ((Gtk.ButtonBoxStyle)(3));
                w22.Spacing = 6;
                w22.Events = ((Gdk.EventMask)(0));
                w22.Name = "vbuttonbox1";
                // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w23 = new Gtk.Button();
                w23.UseStock = true;
                w23.UseUnderline = true;
                w23.CanFocus = true;
                w23.Events = ((Gdk.EventMask)(0));
                w23.Name = "buttonAdd";
                w23.Label = Mono.Unix.Catalog.GetString("gtk-add");
                bindings["buttonAdd"] = w23;
                w22.Add(w23);
                Gtk.ButtonBox.ButtonBoxChild w24 = ((Gtk.ButtonBox.ButtonBoxChild)(w22[w23]));
                w24.Expand = false;
                w24.Fill = false;
                // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w25 = new Gtk.Button();
                w25.UseStock = true;
                w25.UseUnderline = true;
                w25.CanFocus = true;
                w25.Events = ((Gdk.EventMask)(0));
                w25.Name = "buttonRemove";
                w25.Label = Mono.Unix.Catalog.GetString("gtk-remove");
                bindings["buttonRemove"] = w25;
                w22.Add(w25);
                Gtk.ButtonBox.ButtonBoxChild w26 = ((Gtk.ButtonBox.ButtonBoxChild)(w22[w25]));
                w26.Position = 1;
                w26.Expand = false;
                w26.Fill = false;
                // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w27 = new Gtk.Button();
                w27.UseStock = true;
                w27.UseUnderline = true;
                w27.CanFocus = true;
                w27.Events = ((Gdk.EventMask)(0));
                w27.Name = "buttonEdit";
                w27.Label = Mono.Unix.Catalog.GetString("gtk-edit");
                bindings["buttonEdit"] = w27;
                w22.Add(w27);
                Gtk.ButtonBox.ButtonBoxChild w28 = ((Gtk.ButtonBox.ButtonBoxChild)(w22[w27]));
                w28.Position = 2;
                w28.Expand = false;
                w28.Fill = false;
                bindings["vbuttonbox1"] = w22;
                w17.Add(w22);
                Gtk.Box.BoxChild w29 = ((Gtk.Box.BoxChild)(w17[w22]));
                w29.Position = 1;
                w29.Expand = false;
                w29.Fill = false;
                bindings["hbox2"] = w17;
                w3.Add(w17);
                Gtk.Notebook.NotebookChild w30 = ((Gtk.Notebook.NotebookChild)(w3[w17]));
                w30.Position = 1;
                w30.TabExpand = false;
                // Notebook tab
                Gtk.Label w31 = new Gtk.Label();
                w31.LabelProp = Mono.Unix.Catalog.GetString("Registered Repositories");
                w31.Events = ((Gdk.EventMask)(0));
                w31.Name = "label2";
                bindings["label2"] = w31;
                w3.SetTabLabel(w17, w31);
                bindings["notebook"] = w3;
                w2.Add(w3);
                Gtk.Box.BoxChild w32 = ((Gtk.Box.BoxChild)(w2[w3]));
                w32.Position = 0;
                // Container child vbox1.Gtk.Box+BoxChild
                Gtk.Table w33 = new Gtk.Table(((uint)(4)), ((uint)(2)), false);
                w33.RowSpacing = ((uint)(6));
                w33.ColumnSpacing = ((uint)(6));
                w33.Events = ((Gdk.EventMask)(0));
                w33.Name = "table1";
                // Container child table1.Gtk.Table+TableChild
                Gtk.HBox w34 = new Gtk.HBox();
                w34.Spacing = 6;
                w34.Events = ((Gdk.EventMask)(0));
                w34.Name = "boxMessage";
                // Container child boxMessage.Gtk.Box+BoxChild
                Gtk.Entry w35 = new Gtk.Entry();
                w35.IsEditable = true;
                w35.InvisibleChar = '●';
                w35.CanFocus = true;
                w35.Events = ((Gdk.EventMask)(0));
                w35.Name = "entryMessage";
                bindings["entryMessage"] = w35;
                w34.Add(w35);
                Gtk.Box.BoxChild w36 = ((Gtk.Box.BoxChild)(w34[w35]));
                w36.Position = 0;
                // Container child boxMessage.Gtk.Box+BoxChild
                Gtk.Button w37 = new Gtk.Button();
                w37.UseStock = true;
                w37.UseUnderline = true;
                w37.CanFocus = true;
                w37.Events = ((Gdk.EventMask)(0));
                w37.Name = "buttonEditMessage";
                w37.Label = Mono.Unix.Catalog.GetString("gtk-edit");
                bindings["buttonEditMessage"] = w37;
                w34.Add(w37);
                Gtk.Box.BoxChild w38 = ((Gtk.Box.BoxChild)(w34[w37]));
                w38.Position = 1;
                w38.Expand = false;
                w38.Fill = false;
                bindings["boxMessage"] = w34;
                w33.Add(w34);
                Gtk.Table.TableChild w39 = ((Gtk.Table.TableChild)(w33[w34]));
                w39.BottomAttach = ((uint)(4));
                w39.LeftAttach = ((uint)(1));
                w39.RightAttach = ((uint)(2));
                w39.TopAttach = ((uint)(3));
                w39.YOptions = ((Gtk.AttachOptions)(4));
                w39.XOptions = ((Gtk.AttachOptions)(4));
                // Container child table1.Gtk.Table+TableChild
                Gtk.Label w40 = new Gtk.Label();
                w40.LabelProp = Mono.Unix.Catalog.GetString("Message:");
                w40.Xalign = 0F;
                w40.Events = ((Gdk.EventMask)(0));
                w40.Name = "labelMessage";
                bindings["labelMessage"] = w40;
                w33.Add(w40);
                Gtk.Table.TableChild w41 = ((Gtk.Table.TableChild)(w33[w40]));
                w41.BottomAttach = ((uint)(4));
                w41.TopAttach = ((uint)(3));
                w41.YOptions = ((Gtk.AttachOptions)(4));
                w41.XOptions = ((Gtk.AttachOptions)(4));
                // Container child table1.Gtk.Table+TableChild
                Gtk.Entry w42 = new Gtk.Entry();
                w42.IsEditable = true;
                w42.InvisibleChar = '●';
                w42.CanFocus = true;
                w42.Events = ((Gdk.EventMask)(0));
                w42.Name = "entryName";
                bindings["entryName"] = w42;
                w33.Add(w42);
                Gtk.Table.TableChild w43 = ((Gtk.Table.TableChild)(w33[w42]));
                w43.BottomAttach = ((uint)(3));
                w43.LeftAttach = ((uint)(1));
                w43.RightAttach = ((uint)(2));
                w43.TopAttach = ((uint)(2));
                w43.YOptions = ((Gtk.AttachOptions)(4));
                w43.XOptions = ((Gtk.AttachOptions)(4));
                // Container child table1.Gtk.Table+TableChild
                Gtk.Label w44 = new Gtk.Label();
                w44.LabelProp = Mono.Unix.Catalog.GetString("Module name:");
                w44.Xalign = 0F;
                w44.Events = ((Gdk.EventMask)(0));
                w44.Name = "labelName";
                bindings["labelName"] = w44;
                w33.Add(w44);
                Gtk.Table.TableChild w45 = ((Gtk.Table.TableChild)(w33[w44]));
                w45.BottomAttach = ((uint)(3));
                w45.TopAttach = ((uint)(2));
                w45.YOptions = ((Gtk.AttachOptions)(4));
                w45.XOptions = ((Gtk.AttachOptions)(4));
                // Container child table1.Gtk.Table+TableChild
                Gtk.Label w46 = new Gtk.Label();
                w46.LabelProp = Mono.Unix.Catalog.GetString("");
                w46.Xalign = 0F;
                w46.Events = ((Gdk.EventMask)(0));
                w46.Name = "labelRepository";
                bindings["labelRepository"] = w46;
                w33.Add(w46);
                Gtk.Table.TableChild w47 = ((Gtk.Table.TableChild)(w33[w46]));
                w47.LeftAttach = ((uint)(1));
                w47.RightAttach = ((uint)(2));
                w47.YOptions = ((Gtk.AttachOptions)(4));
                // Container child table1.Gtk.Table+TableChild
                Gtk.HBox w48 = new Gtk.HBox();
                w48.Spacing = 6;
                w48.Events = ((Gdk.EventMask)(0));
                w48.Name = "boxFolder";
                // Container child boxFolder.Gtk.Box+BoxChild
                Gtk.Entry w49 = new Gtk.Entry();
                w49.IsEditable = true;
                w49.InvisibleChar = '●';
                w49.CanFocus = true;
                w49.Events = ((Gdk.EventMask)(0));
                w49.Name = "entryFolder";
                bindings["entryFolder"] = w49;
                w48.Add(w49);
                Gtk.Box.BoxChild w50 = ((Gtk.Box.BoxChild)(w48[w49]));
                w50.Position = 0;
                // Container child boxFolder.Gtk.Box+BoxChild
                Gtk.Button w51 = new Gtk.Button();
                w51.CanFocus = true;
                w51.Events = ((Gdk.EventMask)(0));
                w51.Name = "buttonBrowse";
                w51.Label = Mono.Unix.Catalog.GetString("Browse...");
                bindings["buttonBrowse"] = w51;
                w48.Add(w51);
                Gtk.Box.BoxChild w52 = ((Gtk.Box.BoxChild)(w48[w51]));
                w52.Position = 1;
                w52.Expand = false;
                w52.Fill = false;
                bindings["boxFolder"] = w48;
                w33.Add(w48);
                Gtk.Table.TableChild w53 = ((Gtk.Table.TableChild)(w33[w48]));
                w53.BottomAttach = ((uint)(2));
                w53.LeftAttach = ((uint)(1));
                w53.RightAttach = ((uint)(2));
                w53.TopAttach = ((uint)(1));
                w53.YOptions = ((Gtk.AttachOptions)(4));
                w53.XOptions = ((Gtk.AttachOptions)(4));
                // Container child table1.Gtk.Table+TableChild
                Gtk.Label w54 = new Gtk.Label();
                w54.LabelProp = Mono.Unix.Catalog.GetString("Target directory:");
                w54.Xalign = 0F;
                w54.Events = ((Gdk.EventMask)(0));
                w54.Name = "labelTargetDir";
                bindings["labelTargetDir"] = w54;
                w33.Add(w54);
                Gtk.Table.TableChild w55 = ((Gtk.Table.TableChild)(w33[w54]));
                w55.BottomAttach = ((uint)(2));
                w55.TopAttach = ((uint)(1));
                w55.YOptions = ((Gtk.AttachOptions)(4));
                w55.XOptions = ((Gtk.AttachOptions)(4));
                // Container child table1.Gtk.Table+TableChild
                Gtk.Label w56 = new Gtk.Label();
                w56.LabelProp = Mono.Unix.Catalog.GetString("Repository:");
                w56.Xalign = 0F;
                w56.Events = ((Gdk.EventMask)(0));
                w56.Name = "label5";
                bindings["label5"] = w56;
                w33.Add(w56);
                Gtk.Table.TableChild w57 = ((Gtk.Table.TableChild)(w33[w56]));
                w57.YOptions = ((Gtk.AttachOptions)(4));
                w57.XOptions = ((Gtk.AttachOptions)(4));
                bindings["table1"] = w33;
                w2.Add(w33);
                Gtk.Box.BoxChild w58 = ((Gtk.Box.BoxChild)(w2[w33]));
                w58.Position = 1;
                w58.Expand = false;
                w58.Fill = false;
                bindings["vbox1"] = w2;
                w1.Add(w2);
                Gtk.Box.BoxChild w59 = ((Gtk.Box.BoxChild)(w1[w2]));
                w59.Position = 0;
                bindings["dialog_VBox"] = w1;
                // Internal child VersionControl.AddIn.Dialogs.SelectRepositoryDialog.ActionArea
                Gtk.HButtonBox w60 = cobj.ActionArea;
                w60.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                w60.Spacing = 10;
                w60.BorderWidth = ((uint)(5));
                w60.Events = ((Gdk.EventMask)(256));
                w60.Name = "VersionControlAddIn.SelectRepositoryDialog_ActionArea";
                // Container child VersionControlAddIn.SelectRepositoryDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w61 = new Gtk.Button();
                w61.UseStock = true;
                w61.UseUnderline = true;
                w61.CanFocus = true;
                w61.Events = ((Gdk.EventMask)(0));
                w61.Name = "button559";
                w61.CanDefault = true;
                w61.Label = Mono.Unix.Catalog.GetString("gtk-cancel");
                bindings["button559"] = w61;
                cobj.AddActionWidget(w61, -6);
                Gtk.ButtonBox.ButtonBoxChild w62 = ((Gtk.ButtonBox.ButtonBoxChild)(w60[w61]));
                w62.Expand = false;
                w62.Fill = false;
                // Container child VersionControlAddIn.SelectRepositoryDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                Gtk.Button w63 = new Gtk.Button();
                w63.UseStock = true;
                w63.UseUnderline = true;
                w63.CanFocus = true;
                w63.Events = ((Gdk.EventMask)(0));
                w63.Name = "button34";
                w63.CanDefault = true;
                w63.Label = Mono.Unix.Catalog.GetString("gtk-ok");
                bindings["button34"] = w63;
                cobj.AddActionWidget(w63, -5);
                Gtk.ButtonBox.ButtonBoxChild w64 = ((Gtk.ButtonBox.ButtonBoxChild)(w60[w63]));
                w64.Position = 1;
                w64.Expand = false;
                w64.Fill = false;
                bindings["VersionControlAddIn.SelectRepositoryDialog_ActionArea"] = w60;
                cobj.DefaultWidth = 617;
                cobj.DefaultHeight = 438;
                bindings["VersionControl.AddIn.Dialogs.SelectRepositoryDialog"] = cobj;
                w6.Show();
                w8.Show();
                w5.Show();
                w11.Show();
                w13.Show();
                w4.Show();
                w16.Show();
                w19.Show();
                w18.Show();
                w23.Show();
                w25.Show();
                w27.Show();
                w22.Show();
                w17.Show();
                w31.Show();
                w3.Show();
                w35.Show();
                w37.Show();
                w34.Show();
                w40.Show();
                w42.Show();
                w44.Show();
                w46.Show();
                w49.Show();
                w51.Show();
                w48.Show();
                w54.Show();
                w56.Show();
                w33.Show();
                w2.Show();
                w1.Show();
                w61.Show();
                w63.Show();
                w60.Show();
                cobj.Show();
                w3.ChangeCurrentPage += ((Gtk.ChangeCurrentPageHandler)(System.Delegate.CreateDelegate(typeof(Gtk.ChangeCurrentPageHandler), cobj, "OnNotebookChangeCurrentPage")));
                w8.Changed += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnRepComboChanged")));
                w19.CursorChanged += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnRepoTreeCursorChanged")));
                w23.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnButtonAddClicked")));
                w25.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnButtonRemoveClicked")));
                w27.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnButtonEditClicked")));
                w51.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnButtonBrowseClicked")));
            }
            else {
                if ((id == "VersionControl.AddIn.Dialogs.RepositoryManager")) {
                    Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                    // Widget VersionControl.AddIn.Dialogs.RepositoryManager
                    cobj.Title = Mono.Unix.Catalog.GetString("Repository Manager");
                    cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                    cobj.HasSeparator = false;
                    cobj.DefaultWidth = 500;
                    cobj.DefaultHeight = 400;
                    cobj.Events = ((Gdk.EventMask)(0));
                    cobj.Name = "VersionControl.AddIn.Dialogs.RepositoryManager";
                    // Internal child VersionControl.AddIn.Dialogs.RepositoryManager.VBox
                    Gtk.VBox w1 = cobj.VBox;
                    w1.BorderWidth = ((uint)(2));
                    w1.Events = ((Gdk.EventMask)(256));
                    w1.Name = "dialog-vbox2";
                    // Container child dialog-vbox2.Gtk.Box+BoxChild
                    Gtk.HBox w2 = new Gtk.HBox();
                    w2.Spacing = 12;
                    w2.BorderWidth = ((uint)(12));
                    w2.Events = ((Gdk.EventMask)(0));
                    w2.Name = "hbox3";
                    // Container child hbox3.Gtk.Box+BoxChild
                    Gtk.ScrolledWindow w3 = new Gtk.ScrolledWindow();
                    w3.VscrollbarPolicy = ((Gtk.PolicyType)(1));
                    w3.HscrollbarPolicy = ((Gtk.PolicyType)(1));
                    w3.ShadowType = ((Gtk.ShadowType)(1));
                    w3.CanFocus = true;
                    w3.Events = ((Gdk.EventMask)(0));
                    w3.Name = "scrolledwindow2";
                    // Container child scrolledwindow2.Gtk.Container+ContainerChild
                    Gtk.TreeView w4 = new Gtk.TreeView();
                    w4.CanFocus = true;
                    w4.Events = ((Gdk.EventMask)(0));
                    w4.Name = "repoList";
                    bindings["repoList"] = w4;
                    w3.Add(w4);
                    bindings["scrolledwindow2"] = w3;
                    w2.Add(w3);
                    Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(w2[w3]));
                    w6.Position = 0;
                    // Container child hbox3.Gtk.Box+BoxChild
                    Gtk.VButtonBox w7 = new Gtk.VButtonBox();
                    w7.LayoutStyle = ((Gtk.ButtonBoxStyle)(3));
                    w7.Spacing = 6;
                    w7.Events = ((Gdk.EventMask)(0));
                    w7.Name = "vbuttonbox1";
                    // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                    Gtk.Button w8 = new Gtk.Button();
                    w8.UseStock = true;
                    w8.UseUnderline = true;
                    w8.CanFocus = true;
                    w8.Events = ((Gdk.EventMask)(0));
                    w8.Name = "addButton";
                    w8.CanDefault = true;
                    w8.Label = Mono.Unix.Catalog.GetString("gtk-add");
                    bindings["addButton"] = w8;
                    w7.Add(w8);
                    // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                    Gtk.Button w10 = new Gtk.Button();
                    w10.UseStock = true;
                    w10.UseUnderline = true;
                    w10.CanFocus = true;
                    w10.Events = ((Gdk.EventMask)(0));
                    w10.Name = "removeButton";
                    w10.CanDefault = true;
                    w10.Label = Mono.Unix.Catalog.GetString("gtk-remove");
                    bindings["removeButton"] = w10;
                    w7.Add(w10);
                    Gtk.ButtonBox.ButtonBoxChild w11 = ((Gtk.ButtonBox.ButtonBoxChild)(w7[w10]));
                    w11.Position = 1;
                    // Container child vbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
                    Gtk.Button w12 = new Gtk.Button();
                    w12.UseStock = true;
                    w12.UseUnderline = true;
                    w12.CanFocus = true;
                    w12.Events = ((Gdk.EventMask)(0));
                    w12.Name = "editButton";
                    w12.CanDefault = true;
                    w12.Label = Mono.Unix.Catalog.GetString("gtk-edit");
                    bindings["editButton"] = w12;
                    w7.Add(w12);
                    Gtk.ButtonBox.ButtonBoxChild w13 = ((Gtk.ButtonBox.ButtonBoxChild)(w7[w12]));
                    w13.Position = 2;
                    bindings["vbuttonbox1"] = w7;
                    w2.Add(w7);
                    Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(w2[w7]));
                    w14.Position = 1;
                    w14.Expand = false;
                    w14.Fill = false;
                    bindings["hbox3"] = w2;
                    w1.Add(w2);
                    Gtk.Box.BoxChild w15 = ((Gtk.Box.BoxChild)(w1[w2]));
                    w15.Position = 0;
                    bindings["dialog-vbox2"] = w1;
                    // Internal child VersionControl.AddIn.Dialogs.RepositoryManager.ActionArea
                    Gtk.HButtonBox w16 = cobj.ActionArea;
                    w16.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                    w16.Spacing = 10;
                    w16.BorderWidth = ((uint)(5));
                    w16.Events = ((Gdk.EventMask)(256));
                    w16.Name = "GtkDialog_ActionArea";
                    // Container child GtkDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                    Gtk.Button w17 = new Gtk.Button();
                    w17.CanFocus = true;
                    w17.Events = ((Gdk.EventMask)(0));
                    w17.Name = "button9";
                    w17.CanDefault = true;
                    w17.Label = Mono.Unix.Catalog.GetString("button9");
                    bindings["button9"] = w17;
                    cobj.AddActionWidget(w17, 0);
                    Gtk.ButtonBox.ButtonBoxChild w18 = ((Gtk.ButtonBox.ButtonBoxChild)(w16[w17]));
                    w18.Expand = false;
                    w18.Fill = false;
                    bindings["GtkDialog_ActionArea"] = w16;
                    bindings["VersionControl.AddIn.Dialogs.RepositoryManager"] = cobj;
                    w4.Show();
                    w3.Show();
                    w8.Show();
                    w10.Show();
                    w12.Show();
                    w7.Show();
                    w2.Show();
                    w1.Show();
                    w17.Show();
                    w16.Show();
                    cobj.Show();
                    w8.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "on_addButton_clicked")));
                }
                else {
                    if ((id == "VersionControl.AddIn.Dialogs.EditRepositoryDialog")) {
                        Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                        // Widget VersionControl.AddIn.Dialogs.EditRepositoryDialog
                        cobj.Title = Mono.Unix.Catalog.GetString("Repository Configuration");
                        cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                        cobj.HasSeparator = false;
                        cobj.DefaultWidth = 500;
                        cobj.Events = ((Gdk.EventMask)(0));
                        cobj.Name = "VersionControl.AddIn.Dialogs.EditRepositoryDialog";
                        // Internal child VersionControl.AddIn.Dialogs.EditRepositoryDialog.VBox
                        Gtk.VBox w1 = cobj.VBox;
                        w1.BorderWidth = ((uint)(2));
                        w1.Events = ((Gdk.EventMask)(256));
                        w1.Name = "dialog-vbox3";
                        // Container child dialog-vbox3.Gtk.Box+BoxChild
                        Gtk.VBox w2 = new Gtk.VBox();
                        w2.Spacing = 6;
                        w2.BorderWidth = ((uint)(6));
                        w2.Events = ((Gdk.EventMask)(0));
                        w2.Name = "vbox1";
                        // Container child vbox1.Gtk.Box+BoxChild
                        Gtk.Table w3 = new Gtk.Table(((uint)(2)), ((uint)(2)), false);
                        w3.RowSpacing = ((uint)(6));
                        w3.ColumnSpacing = ((uint)(6));
                        w3.Events = ((Gdk.EventMask)(0));
                        w3.Name = "table1";
                        // Container child table1.Gtk.Table+TableChild
                        Gtk.ComboBox w4 = Gtk.ComboBox.NewText();
                        w4.Events = ((Gdk.EventMask)(0));
                        w4.Name = "versionControlType";
                        bindings["versionControlType"] = w4;
                        w3.Add(w4);
                        Gtk.Table.TableChild w5 = ((Gtk.Table.TableChild)(w3[w4]));
                        w5.LeftAttach = ((uint)(1));
                        w5.RightAttach = ((uint)(2));
                        w5.YOptions = ((Gtk.AttachOptions)(4));
                        w5.XOptions = ((Gtk.AttachOptions)(4));
                        // Container child table1.Gtk.Table+TableChild
                        Gtk.Label w6 = new Gtk.Label();
                        w6.LabelProp = Mono.Unix.Catalog.GetString("Type:");
                        w6.Xalign = 0F;
                        w6.Events = ((Gdk.EventMask)(0));
                        w6.Name = "label11";
                        bindings["label11"] = w6;
                        w3.Add(w6);
                        Gtk.Table.TableChild w7 = ((Gtk.Table.TableChild)(w3[w6]));
                        w7.YOptions = ((Gtk.AttachOptions)(0));
                        w7.XOptions = ((Gtk.AttachOptions)(4));
                        // Container child table1.Gtk.Table+TableChild
                        Gtk.Entry w8 = new Gtk.Entry();
                        w8.IsEditable = true;
                        w8.InvisibleChar = '●';
                        w8.CanFocus = true;
                        w8.Events = ((Gdk.EventMask)(0));
                        w8.Name = "entryName";
                        bindings["entryName"] = w8;
                        w3.Add(w8);
                        Gtk.Table.TableChild w9 = ((Gtk.Table.TableChild)(w3[w8]));
                        w9.BottomAttach = ((uint)(2));
                        w9.LeftAttach = ((uint)(1));
                        w9.RightAttach = ((uint)(2));
                        w9.TopAttach = ((uint)(1));
                        w9.YOptions = ((Gtk.AttachOptions)(0));
                        // Container child table1.Gtk.Table+TableChild
                        Gtk.Label w10 = new Gtk.Label();
                        w10.LabelProp = Mono.Unix.Catalog.GetString("Name:");
                        w10.Xalign = 0F;
                        w10.Events = ((Gdk.EventMask)(0));
                        w10.Name = "label8";
                        bindings["label8"] = w10;
                        w3.Add(w10);
                        Gtk.Table.TableChild w11 = ((Gtk.Table.TableChild)(w3[w10]));
                        w11.BottomAttach = ((uint)(2));
                        w11.TopAttach = ((uint)(1));
                        w11.YOptions = ((Gtk.AttachOptions)(0));
                        w11.XOptions = ((Gtk.AttachOptions)(4));
                        bindings["table1"] = w3;
                        w2.Add(w3);
                        Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(w2[w3]));
                        w12.Position = 0;
                        w12.Expand = false;
                        w12.Fill = false;
                        // Container child vbox1.Gtk.Box+BoxChild
                        Gtk.HSeparator w13 = new Gtk.HSeparator();
                        w13.Events = ((Gdk.EventMask)(0));
                        w13.Name = "hseparator2";
                        bindings["hseparator2"] = w13;
                        w2.Add(w13);
                        Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(w2[w13]));
                        w14.Position = 1;
                        w14.Expand = false;
                        w14.Fill = false;
                        // Container child vbox1.Gtk.Box+BoxChild
                        Gtk.EventBox w15 = new Gtk.EventBox();
                        w15.Events = ((Gdk.EventMask)(0));
                        w15.Name = "repoEditorContainer";
                        bindings["repoEditorContainer"] = w15;
                        w2.Add(w15);
                        Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(w2[w15]));
                        w16.Position = 2;
                        bindings["vbox1"] = w2;
                        w1.Add(w2);
                        Gtk.Box.BoxChild w17 = ((Gtk.Box.BoxChild)(w1[w2]));
                        w17.Position = 0;
                        bindings["dialog-vbox3"] = w1;
                        // Internal child VersionControl.AddIn.Dialogs.EditRepositoryDialog.ActionArea
                        Gtk.HButtonBox w18 = cobj.ActionArea;
                        w18.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                        w18.Spacing = 10;
                        w18.BorderWidth = ((uint)(5));
                        w18.Events = ((Gdk.EventMask)(256));
                        w18.Name = "GtkDialog_ActionArea";
                        // Container child GtkDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                        Gtk.Button w19 = new Gtk.Button();
                        w19.UseStock = true;
                        w19.UseUnderline = true;
                        w19.CanFocus = true;
                        w19.Events = ((Gdk.EventMask)(0));
                        w19.Name = "button10";
                        w19.CanDefault = true;
                        w19.Label = Mono.Unix.Catalog.GetString("gtk-cancel");
                        bindings["button10"] = w19;
                        cobj.AddActionWidget(w19, -6);
                        Gtk.ButtonBox.ButtonBoxChild w20 = ((Gtk.ButtonBox.ButtonBoxChild)(w18[w19]));
                        w20.Expand = false;
                        w20.Fill = false;
                        // Container child GtkDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                        Gtk.Button w21 = new Gtk.Button();
                        w21.UseStock = true;
                        w21.UseUnderline = true;
                        w21.CanFocus = true;
                        w21.Events = ((Gdk.EventMask)(0));
                        w21.Name = "button24";
                        w21.CanDefault = true;
                        w21.Label = Mono.Unix.Catalog.GetString("gtk-ok");
                        bindings["button24"] = w21;
                        cobj.AddActionWidget(w21, -5);
                        Gtk.ButtonBox.ButtonBoxChild w22 = ((Gtk.ButtonBox.ButtonBoxChild)(w18[w21]));
                        w22.Position = 1;
                        w22.Expand = false;
                        w22.Fill = false;
                        bindings["GtkDialog_ActionArea"] = w18;
                        cobj.DefaultHeight = 414;
                        bindings["VersionControl.AddIn.Dialogs.EditRepositoryDialog"] = cobj;
                        w4.Show();
                        w6.Show();
                        w8.Show();
                        w10.Show();
                        w3.Show();
                        w13.Show();
                        w15.Show();
                        w2.Show();
                        w1.Show();
                        w19.Show();
                        w21.Show();
                        w18.Show();
                        cobj.Show();
                        w4.Changed += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnVersionControlTypeChanged")));
                        w8.Changed += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnEntryNameChanged")));
                    }
                    else {
                        if ((id == "VersionControl.SelectRepositoryFolderDialog")) {
                            Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                            // Widget VersionControl.SelectRepositoryFolderDialog
                            cobj.Title = Mono.Unix.Catalog.GetString("Select Repository Folder");
                            cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                            cobj.HasSeparator = false;
                            cobj.DefaultWidth = 500;
                            cobj.DefaultHeight = 400;
                            cobj.Events = ((Gdk.EventMask)(0));
                            cobj.Name = "VersionControl.SelectRepositoryFolderDialog";
                            // Internal child VersionControl.SelectRepositoryFolderDialog.VBox
                            Gtk.VBox w1 = cobj.VBox;
                            w1.BorderWidth = ((uint)(2));
                            w1.Events = ((Gdk.EventMask)(256));
                            w1.Name = "dialog-vbox1";
                            // Container child dialog-vbox1.Gtk.Box+BoxChild
                            Gtk.VBox w2 = new Gtk.VBox();
                            w2.Spacing = 6;
                            w2.BorderWidth = ((uint)(12));
                            w2.Events = ((Gdk.EventMask)(0));
                            w2.Name = "vbox1";
                            // Container child vbox1.Gtk.Box+BoxChild
                            Gtk.HBox w3 = new Gtk.HBox();
                            w3.Spacing = 6;
                            w3.Events = ((Gdk.EventMask)(0));
                            w3.Name = "hbox1";
                            // Container child hbox1.Gtk.Box+BoxChild
                            Gtk.Label w4 = new Gtk.Label();
                            w4.LabelProp = Mono.Unix.Catalog.GetString("Repository:");
                            w4.Events = ((Gdk.EventMask)(0));
                            w4.Name = "label1";
                            bindings["label1"] = w4;
                            w3.Add(w4);
                            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(w3[w4]));
                            w5.Position = 0;
                            w5.Expand = false;
                            w5.Fill = false;
                            // Container child hbox1.Gtk.Box+BoxChild
                            Gtk.ComboBox w6 = new Gtk.ComboBox();
                            w6.Events = ((Gdk.EventMask)(0));
                            w6.Name = "repositoryCmb";
                            bindings["repositoryCmb"] = w6;
                            w3.Add(w6);
                            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(w3[w6]));
                            w7.Position = 1;
                            bindings["hbox1"] = w3;
                            w2.Add(w3);
                            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w2[w3]));
                            w8.Position = 0;
                            w8.Expand = false;
                            w8.Fill = false;
                            // Container child vbox1.Gtk.Box+BoxChild
                            Gtk.ScrolledWindow w9 = new Gtk.ScrolledWindow();
                            w9.VscrollbarPolicy = ((Gtk.PolicyType)(1));
                            w9.HscrollbarPolicy = ((Gtk.PolicyType)(1));
                            w9.ShadowType = ((Gtk.ShadowType)(1));
                            w9.CanFocus = true;
                            w9.Events = ((Gdk.EventMask)(0));
                            w9.Name = "scrolledwindow1";
                            // Container child scrolledwindow1.Gtk.Container+ContainerChild
                            Gtk.TreeView w10 = new Gtk.TreeView();
                            w10.CanFocus = true;
                            w10.Events = ((Gdk.EventMask)(0));
                            w10.Name = "dirTree";
                            bindings["dirTree"] = w10;
                            w9.Add(w10);
                            bindings["scrolledwindow1"] = w9;
                            w2.Add(w9);
                            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(w2[w9]));
                            w12.Position = 1;
                            // Container child vbox1.Gtk.Box+BoxChild
                            Gtk.HBox w13 = new Gtk.HBox();
                            w13.Spacing = 6;
                            w13.Events = ((Gdk.EventMask)(0));
                            w13.Name = "hbox2";
                            // Container child hbox2.Gtk.Box+BoxChild
                            Gtk.Label w14 = new Gtk.Label();
                            w14.LabelProp = Mono.Unix.Catalog.GetString("Path:");
                            w14.Events = ((Gdk.EventMask)(0));
                            w14.Name = "label2";
                            bindings["label2"] = w14;
                            w13.Add(w14);
                            Gtk.Box.BoxChild w15 = ((Gtk.Box.BoxChild)(w13[w14]));
                            w15.Position = 0;
                            w15.Expand = false;
                            w15.Fill = false;
                            // Container child hbox2.Gtk.Box+BoxChild
                            Gtk.Entry w16 = new Gtk.Entry();
                            w16.IsEditable = true;
                            w16.InvisibleChar = '●';
                            w16.CanFocus = true;
                            w16.Events = ((Gdk.EventMask)(0));
                            w16.Name = "pathEntry";
                            bindings["pathEntry"] = w16;
                            w13.Add(w16);
                            Gtk.Box.BoxChild w17 = ((Gtk.Box.BoxChild)(w13[w16]));
                            w17.Position = 1;
                            bindings["hbox2"] = w13;
                            w2.Add(w13);
                            Gtk.Box.BoxChild w18 = ((Gtk.Box.BoxChild)(w2[w13]));
                            w18.Position = 2;
                            w18.Expand = false;
                            w18.Fill = false;
                            bindings["vbox1"] = w2;
                            w1.Add(w2);
                            Gtk.Box.BoxChild w19 = ((Gtk.Box.BoxChild)(w1[w2]));
                            w19.Position = 0;
                            bindings["dialog-vbox1"] = w1;
                            // Internal child VersionControl.SelectRepositoryFolderDialog.ActionArea
                            Gtk.HButtonBox w20 = cobj.ActionArea;
                            w20.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                            w20.Spacing = 10;
                            w20.BorderWidth = ((uint)(5));
                            w20.Events = ((Gdk.EventMask)(256));
                            w20.Name = "GtkDialog_ActionArea";
                            // Container child GtkDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                            Gtk.Button w21 = new Gtk.Button();
                            w21.CanFocus = true;
                            w21.Events = ((Gdk.EventMask)(0));
                            w21.Name = "button8";
                            w21.CanDefault = true;
                            w21.Label = Mono.Unix.Catalog.GetString("button8");
                            bindings["button8"] = w21;
                            cobj.AddActionWidget(w21, 0);
                            Gtk.ButtonBox.ButtonBoxChild w22 = ((Gtk.ButtonBox.ButtonBoxChild)(w20[w21]));
                            w22.Expand = false;
                            w22.Fill = false;
                            bindings["GtkDialog_ActionArea"] = w20;
                            bindings["VersionControl.SelectRepositoryFolderDialog"] = cobj;
                            w4.Show();
                            w6.Show();
                            w3.Show();
                            w10.Show();
                            w9.Show();
                            w14.Show();
                            w16.Show();
                            w13.Show();
                            w2.Show();
                            w1.Show();
                            w21.Show();
                            w20.Show();
                            cobj.Show();
                        }
                        else {
                            if ((id == "VersionControlAddIn.FileStatusHeader")) {
                                Gtk.Bin cobj = ((Gtk.Bin)(obj));
                                // Widget VersionControlAddIn.FileStatusHeader
                                BinContainer.Attach(cobj);
                                cobj.Events = ((Gdk.EventMask)(256));
                                cobj.Name = "VersionControlAddIn.FileStatusHeader";
                                // Container child VersionControlAddIn.FileStatusHeader.Gtk.Container+ContainerChild
                                Gtk.HBox w1 = new Gtk.HBox();
                                w1.Spacing = 6;
                                w1.Events = ((Gdk.EventMask)(0));
                                w1.Name = "hbox1";
                                // Container child hbox1.Gtk.Box+BoxChild
                                Gtk.Expander w2 = new Gtk.Expander(null);
                                w2.CanFocus = true;
                                w2.Events = ((Gdk.EventMask)(0));
                                w2.Name = "expander1";
                                Gtk.Label w3 = new Gtk.Label();
                                w3.LabelProp = Mono.Unix.Catalog.GetString("");
                                w3.UseUnderline = true;
                                w3.Events = ((Gdk.EventMask)(256));
                                w3.Name = "GtkLabel";
                                bindings["GtkLabel"] = w3;
                                w2.LabelWidget = w3;
                                bindings["expander1"] = w2;
                                w1.Add(w2);
                                Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(w1[w2]));
                                w4.Position = 0;
                                w4.Expand = false;
                                w4.Fill = false;
                                // Container child hbox1.Gtk.Box+BoxChild
                                Gtk.Image w5 = new Gtk.Image();
                                w5.Pixbuf = Gtk.IconTheme.Default.LoadIcon("gtk-add", 16, 0);
                                w5.Events = ((Gdk.EventMask)(0));
                                w5.Name = "image1";
                                bindings["image1"] = w5;
                                w1.Add(w5);
                                Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(w1[w5]));
                                w6.Position = 1;
                                w6.Expand = false;
                                w6.Fill = false;
                                // Container child hbox1.Gtk.Box+BoxChild
                                Gtk.Label w7 = new Gtk.Label();
                                w7.LabelProp = Mono.Unix.Catalog.GetString("Modified");
                                w7.Events = ((Gdk.EventMask)(0));
                                w7.Name = "label3";
                                bindings["label3"] = w7;
                                w1.Add(w7);
                                Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w1[w7]));
                                w8.Position = 2;
                                w8.Expand = false;
                                w8.Fill = false;
                                bindings["hbox1"] = w1;
                                cobj.Add(w1);
                                bindings["VersionControlAddIn.FileStatusHeader"] = cobj;
                                w3.Show();
                                w2.Show();
                                w5.Show();
                                w7.Show();
                                w1.Show();
                                cobj.Show();
                            }
                            else {
                                if ((id == "VersionControl.AddIn.Dialogs.CommitDialog")) {
                                    Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                                    // Widget VersionControl.AddIn.Dialogs.CommitDialog
                                    cobj.Title = Mono.Unix.Catalog.GetString("Commit Files");
                                    cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                                    cobj.HasSeparator = false;
                                    cobj.Events = ((Gdk.EventMask)(256));
                                    cobj.Name = "VersionControl.AddIn.Dialogs.CommitDialog";
                                    // Internal child VersionControl.AddIn.Dialogs.CommitDialog.VBox
                                    Gtk.VBox w1 = cobj.VBox;
                                    w1.BorderWidth = ((uint)(2));
                                    w1.Events = ((Gdk.EventMask)(256));
                                    w1.Name = "dialog_VBox";
                                    // Container child dialog_VBox.Gtk.Box+BoxChild
                                    Gtk.VBox w2 = new Gtk.VBox();
                                    w2.Spacing = 6;
                                    w2.BorderWidth = ((uint)(12));
                                    w2.Events = ((Gdk.EventMask)(0));
                                    w2.Name = "vbox1";
                                    // Container child vbox1.Gtk.Box+BoxChild
                                    Gtk.Label w3 = new Gtk.Label();
                                    w3.LabelProp = Mono.Unix.Catalog.GetString("Select the files to commit:");
                                    w3.Xalign = 0F;
                                    w3.Events = ((Gdk.EventMask)(0));
                                    w3.Name = "label1";
                                    bindings["label1"] = w3;
                                    w2.Add(w3);
                                    Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(w2[w3]));
                                    w4.Position = 0;
                                    w4.Expand = false;
                                    w4.Fill = false;
                                    // Container child vbox1.Gtk.Box+BoxChild
                                    Gtk.ScrolledWindow w5 = new Gtk.ScrolledWindow();
                                    w5.VscrollbarPolicy = ((Gtk.PolicyType)(1));
                                    w5.HscrollbarPolicy = ((Gtk.PolicyType)(1));
                                    w5.ShadowType = ((Gtk.ShadowType)(1));
                                    w5.CanFocus = true;
                                    w5.Events = ((Gdk.EventMask)(0));
                                    w5.Name = "scrolledwindow1";
                                    // Container child scrolledwindow1.Gtk.Container+ContainerChild
                                    Gtk.TreeView w6 = new Gtk.TreeView();
                                    w6.CanFocus = true;
                                    w6.Events = ((Gdk.EventMask)(0));
                                    w6.Name = "fileList";
                                    bindings["fileList"] = w6;
                                    w5.Add(w6);
                                    bindings["scrolledwindow1"] = w5;
                                    w2.Add(w5);
                                    Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w2[w5]));
                                    w8.Position = 1;
                                    // Container child vbox1.Gtk.Box+BoxChild
                                    Gtk.ScrolledWindow w9 = new Gtk.ScrolledWindow();
                                    w9.VscrollbarPolicy = ((Gtk.PolicyType)(1));
                                    w9.HscrollbarPolicy = ((Gtk.PolicyType)(1));
                                    w9.ShadowType = ((Gtk.ShadowType)(1));
                                    w9.CanFocus = true;
                                    w9.Events = ((Gdk.EventMask)(0));
                                    w9.Name = "scrolledwindow2";
                                    // Container child scrolledwindow2.Gtk.Container+ContainerChild
                                    Gtk.TextView w10 = new Gtk.TextView();
                                    w10.CanFocus = true;
                                    w10.Events = ((Gdk.EventMask)(0));
                                    w10.Name = "textview";
                                    bindings["textview"] = w10;
                                    w9.Add(w10);
                                    bindings["scrolledwindow2"] = w9;
                                    w2.Add(w9);
                                    Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(w2[w9]));
                                    w12.PackType = ((Gtk.PackType)(1));
                                    w12.Position = 2;
                                    w12.Expand = false;
                                    w12.Fill = false;
                                    // Container child vbox1.Gtk.Box+BoxChild
                                    Gtk.Label w13 = new Gtk.Label();
                                    w13.LabelProp = Mono.Unix.Catalog.GetString("Message:");
                                    w13.Xalign = 0F;
                                    w13.Events = ((Gdk.EventMask)(0));
                                    w13.Name = "label2";
                                    bindings["label2"] = w13;
                                    w2.Add(w13);
                                    Gtk.Box.BoxChild w14 = ((Gtk.Box.BoxChild)(w2[w13]));
                                    w14.PackType = ((Gtk.PackType)(1));
                                    w14.Position = 3;
                                    w14.Expand = false;
                                    w14.Fill = false;
                                    bindings["vbox1"] = w2;
                                    w1.Add(w2);
                                    Gtk.Box.BoxChild w15 = ((Gtk.Box.BoxChild)(w1[w2]));
                                    w15.Position = 0;
                                    bindings["dialog_VBox"] = w1;
                                    // Internal child VersionControl.AddIn.Dialogs.CommitDialog.ActionArea
                                    Gtk.HButtonBox w16 = cobj.ActionArea;
                                    w16.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                                    w16.Spacing = 10;
                                    w16.BorderWidth = ((uint)(5));
                                    w16.Events = ((Gdk.EventMask)(256));
                                    w16.Name = "VersionControlAddIn.CommitDialog_ActionArea";
                                    // Container child VersionControlAddIn.CommitDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                                    Gtk.Button w17 = new Gtk.Button();
                                    w17.UseStock = true;
                                    w17.UseUnderline = true;
                                    w17.CanFocus = true;
                                    w17.Events = ((Gdk.EventMask)(0));
                                    w17.Name = "button29";
                                    w17.CanDefault = true;
                                    w17.Label = Mono.Unix.Catalog.GetString("gtk-cancel");
                                    bindings["button29"] = w17;
                                    cobj.AddActionWidget(w17, -6);
                                    Gtk.ButtonBox.ButtonBoxChild w18 = ((Gtk.ButtonBox.ButtonBoxChild)(w16[w17]));
                                    w18.Expand = false;
                                    w18.Fill = false;
                                    // Container child VersionControlAddIn.CommitDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                                    Gtk.Button w19 = new Gtk.Button();
                                    w19.UseStock = true;
                                    w19.UseUnderline = true;
                                    w19.CanFocus = true;
                                    w19.Events = ((Gdk.EventMask)(0));
                                    w19.Name = "button31";
                                    w19.CanDefault = true;
                                    w19.Label = Mono.Unix.Catalog.GetString("gtk-ok");
                                    bindings["button31"] = w19;
                                    cobj.AddActionWidget(w19, -5);
                                    Gtk.ButtonBox.ButtonBoxChild w20 = ((Gtk.ButtonBox.ButtonBoxChild)(w16[w19]));
                                    w20.Position = 1;
                                    w20.Expand = false;
                                    w20.Fill = false;
                                    bindings["VersionControlAddIn.CommitDialog_ActionArea"] = w16;
                                    cobj.DefaultWidth = 577;
                                    cobj.DefaultHeight = 432;
                                    bindings["VersionControl.AddIn.Dialogs.CommitDialog"] = cobj;
                                    w3.Show();
                                    w6.Show();
                                    w5.Show();
                                    w10.Show();
                                    w9.Show();
                                    w13.Show();
                                    w2.Show();
                                    w1.Show();
                                    w17.Show();
                                    w19.Show();
                                    w16.Show();
                                    cobj.Show();
                                }
                            }
                        }
                    }
                }
            }
            System.Reflection.FieldInfo[] fields = obj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(obj, widget);
                }
            }
        }
        
        private static void Initialize() {
            Gtk.IconFactory w1 = new Gtk.IconFactory();
            Gtk.IconSet w2 = new Gtk.IconSet(Gdk.Pixbuf.LoadFromResource("repository.png"));
            w1.Add("vcs-repository", w2);
            w1.AddDefault();
        }
    }
    
    internal class BinContainer {
        
        private Gtk.Widget child;
        
        private Gtk.UIManager uimanager;
        
        public static BinContainer Attach(Gtk.Bin bin) {
            BinContainer bc = new BinContainer();
            bin.SizeRequested += new Gtk.SizeRequestedHandler(bc.OnSizeRequested);
            bin.SizeAllocated += new Gtk.SizeAllocatedHandler(bc.OnSizeAllocated);
            bin.Added += new Gtk.AddedHandler(bc.OnAdded);
            return bc;
        }
        
        private void OnSizeRequested(object sender, Gtk.SizeRequestedArgs args) {
            if ((this.child != null)) {
                args.Requisition = this.child.SizeRequest();
            }
        }
        
        private void OnSizeAllocated(object sender, Gtk.SizeAllocatedArgs args) {
            if ((this.child != null)) {
                this.child.Allocation = args.Allocation;
            }
        }
        
        private void OnAdded(object sender, Gtk.AddedArgs args) {
            this.child = args.Widget;
        }
        
        public void SetUiManager(Gtk.UIManager uim) {
            this.uimanager = uim;
            this.child.Realized += new System.EventHandler(this.OnRealized);
        }
        
        private void OnRealized(object sender, System.EventArgs args) {
            if ((this.uimanager != null)) {
                Gtk.Widget w;
                w = this.child.Toplevel;
                if (((w != null) && typeof(Gtk.Window).IsInstanceOfType(w))) {
                    ((Gtk.Window)(w)).AddAccelGroup(this.uimanager.AccelGroup);
                    this.uimanager = null;
                }
            }
        }
    }
    
    internal class ActionGroups {
        
        public static Gtk.ActionGroup GetActionGroup(System.Type type) {
            return Stetic.ActionGroups.GetActionGroup(type.FullName);
        }
        
        public static Gtk.ActionGroup GetActionGroup(string name) {
            return null;
        }
    }
}
