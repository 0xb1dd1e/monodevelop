// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MonoDevelop.Projects.Gui.Deployment {
    
    
    public partial class InstallDeployEditorWidget {
        
        private Gtk.VBox vbox1;
        
        private Gtk.Label label1;
        
        private MonoDevelop.Components.FolderEntry folderEntry;
        
        private Gtk.Label label2;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Entry nameEntry;
        
        protected virtual void Build() {
            // Widget MonoDevelop.Projects.Gui.Deployment.InstallDeployEditorWidget
            Stetic.BinContainer.Attach(this);
            this.Name = "MonoDevelop.Projects.Gui.Deployment.InstallDeployEditorWidget";
            // Container child MonoDevelop.Projects.Gui.Deployment.InstallDeployEditorWidget.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Events = ((Gdk.EventMask)(0));
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.label1 = new Gtk.Label();
            this.label1.Events = ((Gdk.EventMask)(0));
            this.label1.Name = "label1";
            this.label1.Xalign = 0F;
            this.label1.LabelProp = "Directory prefix:";
            this.vbox1.Add(this.label1);
            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.vbox1[this.label1]));
            w1.Position = 0;
            w1.Expand = false;
            w1.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.folderEntry = new MonoDevelop.Components.FolderEntry();
            this.folderEntry.Events = ((Gdk.EventMask)(0));
            this.folderEntry.Name = "folderEntry";
            this.folderEntry.BrowserTitle = "Select Directory";
            this.vbox1.Add(this.folderEntry);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.vbox1[this.folderEntry]));
            w2.Position = 1;
            w2.Expand = false;
            w2.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.label2 = new Gtk.Label();
            this.label2.Events = ((Gdk.EventMask)(0));
            this.label2.Name = "label2";
            this.label2.Xalign = 0F;
            this.label2.LabelProp = "Application name (to use as subdirectory name in the installation prefix):";
            this.vbox1.Add(this.label2);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.label2]));
            w3.Position = 2;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Events = ((Gdk.EventMask)(0));
            this.hbox1.Name = "hbox1";
            // Container child hbox1.Gtk.Box+BoxChild
            this.nameEntry = new Gtk.Entry();
            this.nameEntry.WidthRequest = 275;
            this.nameEntry.CanFocus = true;
            this.nameEntry.Events = ((Gdk.EventMask)(0));
            this.nameEntry.Name = "nameEntry";
            this.nameEntry.IsEditable = true;
            this.nameEntry.InvisibleChar = '‚óè';
            this.hbox1.Add(this.nameEntry);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.hbox1[this.nameEntry]));
            w4.Position = 0;
            w4.Expand = false;
            this.vbox1.Add(this.hbox1);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox1]));
            w5.Position = 3;
            w5.Expand = false;
            w5.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.folderEntry.PathChanged += new System.EventHandler(this.OnFolderEntryPathChanged);
            this.nameEntry.Changed += new System.EventHandler(this.OnNameEntryChanged);
        }
    }
}
